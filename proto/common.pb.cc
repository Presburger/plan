// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#include "common.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace milvus {
namespace proto {
namespace common {

inline constexpr Status::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        detail_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_code_{static_cast< ::milvus::proto::common::ErrorCode >(0)},
        code_{0},
        retriable_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Status::Status(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusDefaultTypeInternal() {}
  union {
    Status _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusDefaultTypeInternal _Status_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ServerInfo_ReservedEntry_DoNotUse::ServerInfo_ReservedEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ServerInfo_ReservedEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerInfo_ReservedEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerInfo_ReservedEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ServerInfo_ReservedEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerInfo_ReservedEntry_DoNotUseDefaultTypeInternal _ServerInfo_ReservedEntry_DoNotUse_default_instance_;

inline constexpr SegmentStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : segmentid_{::int64_t{0}},
        numrows_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SegmentStats::SegmentStats(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SegmentStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SegmentStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SegmentStatsDefaultTypeInternal() {}
  union {
    SegmentStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SegmentStatsDefaultTypeInternal _SegmentStats_default_instance_;

inline constexpr ReplicateInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : msgtimestamp_{::uint64_t{0u}},
        isreplicate_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReplicateInfo::ReplicateInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReplicateInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplicateInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplicateInfoDefaultTypeInternal() {}
  union {
    ReplicateInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplicateInfoDefaultTypeInternal _ReplicateInfo_default_instance_;

inline constexpr PrivilegeExt::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : object_type_{static_cast< ::milvus::proto::common::ObjectType >(0)},
        object_privilege_{static_cast< ::milvus::proto::common::ObjectPrivilege >(0)},
        object_name_index_{0},
        object_name_indexs_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PrivilegeExt::PrivilegeExt(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PrivilegeExtDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PrivilegeExtDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PrivilegeExtDefaultTypeInternal() {}
  union {
    PrivilegeExt _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PrivilegeExtDefaultTypeInternal _PrivilegeExt_default_instance_;

inline constexpr PlaceholderValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : values_{},
        tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::milvus::proto::common::PlaceholderType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlaceholderValue::PlaceholderValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlaceholderValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlaceholderValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlaceholderValueDefaultTypeInternal() {}
  union {
    PlaceholderValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlaceholderValueDefaultTypeInternal _PlaceholderValue_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR MsgBase_PropertiesEntry_DoNotUse::MsgBase_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct MsgBase_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgBase_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgBase_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MsgBase_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgBase_PropertiesEntry_DoNotUseDefaultTypeInternal _MsgBase_PropertiesEntry_DoNotUse_default_instance_;

inline constexpr KeyValuePair::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR KeyValuePair::KeyValuePair(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct KeyValuePairDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyValuePairDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyValuePairDefaultTypeInternal() {}
  union {
    KeyValuePair _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyValuePairDefaultTypeInternal _KeyValuePair_default_instance_;

inline constexpr KeyDataPair::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR KeyDataPair::KeyDataPair(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct KeyDataPairDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyDataPairDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyDataPairDefaultTypeInternal() {}
  union {
    KeyDataPair _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyDataPairDefaultTypeInternal _KeyDataPair_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ClientInfo_ReservedEntry_DoNotUse::ClientInfo_ReservedEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct ClientInfo_ReservedEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientInfo_ReservedEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientInfo_ReservedEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ClientInfo_ReservedEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientInfo_ReservedEntry_DoNotUseDefaultTypeInternal _ClientInfo_ReservedEntry_DoNotUse_default_instance_;

inline constexpr Blob::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Blob::Blob(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlobDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlobDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlobDefaultTypeInternal() {}
  union {
    Blob _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlobDefaultTypeInternal _Blob_default_instance_;

inline constexpr Address::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Address::Address(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddressDefaultTypeInternal() {}
  union {
    Address _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddressDefaultTypeInternal _Address_default_instance_;

inline constexpr ServerInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reserved_{},
        build_tags_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        build_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        git_commit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        go_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        deploy_mode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ServerInfo::ServerInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ServerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerInfoDefaultTypeInternal() {}
  union {
    ServerInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerInfoDefaultTypeInternal _ServerInfo_default_instance_;

inline constexpr PlaceholderGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : placeholders_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlaceholderGroup::PlaceholderGroup(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlaceholderGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlaceholderGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlaceholderGroupDefaultTypeInternal() {}
  union {
    PlaceholderGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlaceholderGroupDefaultTypeInternal _PlaceholderGroup_default_instance_;

inline constexpr MsgBase::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        properties_{},
        replicateinfo_{nullptr},
        msgid_{::int64_t{0}},
        timestamp_{::uint64_t{0u}},
        sourceid_{::int64_t{0}},
        targetid_{::int64_t{0}},
        msg_type_{static_cast< ::milvus::proto::common::MsgType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR MsgBase::MsgBase(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MsgBaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgBaseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgBaseDefaultTypeInternal() {}
  union {
    MsgBase _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgBaseDefaultTypeInternal _MsgBase_default_instance_;

inline constexpr ClientInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reserved_{},
        sdk_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sdk_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        local_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClientInfo::ClientInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ClientInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientInfoDefaultTypeInternal() {}
  union {
    ClientInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientInfoDefaultTypeInternal _ClientInfo_default_instance_;

inline constexpr MsgHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MsgHeader::MsgHeader(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MsgHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgHeaderDefaultTypeInternal() {}
  union {
    MsgHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgHeaderDefaultTypeInternal _MsgHeader_default_instance_;

inline constexpr DMLMsgHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        shardname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        base_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DMLMsgHeader::DMLMsgHeader(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DMLMsgHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DMLMsgHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DMLMsgHeaderDefaultTypeInternal() {}
  union {
    DMLMsgHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DMLMsgHeaderDefaultTypeInternal _DMLMsgHeader_default_instance_;
}  // namespace common
}  // namespace proto
}  // namespace milvus
static ::_pb::Metadata file_level_metadata_common_2eproto[18];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_common_2eproto[13];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_2eproto = nullptr;
const ::uint32_t TableStruct_common_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::Status, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::Status, _impl_.error_code_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::Status, _impl_.reason_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::Status, _impl_.code_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::Status, _impl_.retriable_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::Status, _impl_.detail_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::KeyValuePair, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::KeyValuePair, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::KeyValuePair, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::KeyDataPair, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::KeyDataPair, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::KeyDataPair, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::Blob, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::Blob, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::PlaceholderValue, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::PlaceholderValue, _impl_.tag_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::PlaceholderValue, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::PlaceholderValue, _impl_.values_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::PlaceholderGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::PlaceholderGroup, _impl_.placeholders_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::Address, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::Address, _impl_.ip_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::Address, _impl_.port_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgBase_PropertiesEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgBase_PropertiesEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgBase_PropertiesEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgBase_PropertiesEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgBase, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgBase, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgBase, _impl_.msg_type_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgBase, _impl_.msgid_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgBase, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgBase, _impl_.sourceid_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgBase, _impl_.targetid_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgBase, _impl_.properties_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgBase, _impl_.replicateinfo_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ReplicateInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ReplicateInfo, _impl_.isreplicate_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ReplicateInfo, _impl_.msgtimestamp_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgHeader, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgHeader, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::MsgHeader, _impl_.base_),
    0,
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::DMLMsgHeader, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::DMLMsgHeader, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::DMLMsgHeader, _impl_.base_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::DMLMsgHeader, _impl_.shardname_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::PrivilegeExt, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::PrivilegeExt, _impl_.object_type_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::PrivilegeExt, _impl_.object_privilege_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::PrivilegeExt, _impl_.object_name_index_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::PrivilegeExt, _impl_.object_name_indexs_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::SegmentStats, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::SegmentStats, _impl_.segmentid_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::SegmentStats, _impl_.numrows_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ClientInfo_ReservedEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ClientInfo_ReservedEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ClientInfo_ReservedEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ClientInfo_ReservedEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ClientInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ClientInfo, _impl_.sdk_type_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ClientInfo, _impl_.sdk_version_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ClientInfo, _impl_.local_time_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ClientInfo, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ClientInfo, _impl_.host_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ClientInfo, _impl_.reserved_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ServerInfo_ReservedEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ServerInfo_ReservedEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ServerInfo_ReservedEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ServerInfo_ReservedEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ServerInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ServerInfo, _impl_.build_tags_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ServerInfo, _impl_.build_time_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ServerInfo, _impl_.git_commit_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ServerInfo, _impl_.go_version_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ServerInfo, _impl_.deploy_mode_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::common::ServerInfo, _impl_.reserved_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::milvus::proto::common::Status)},
        {13, -1, -1, sizeof(::milvus::proto::common::KeyValuePair)},
        {23, -1, -1, sizeof(::milvus::proto::common::KeyDataPair)},
        {33, -1, -1, sizeof(::milvus::proto::common::Blob)},
        {42, -1, -1, sizeof(::milvus::proto::common::PlaceholderValue)},
        {53, -1, -1, sizeof(::milvus::proto::common::PlaceholderGroup)},
        {62, -1, -1, sizeof(::milvus::proto::common::Address)},
        {72, 82, -1, sizeof(::milvus::proto::common::MsgBase_PropertiesEntry_DoNotUse)},
        {84, 99, -1, sizeof(::milvus::proto::common::MsgBase)},
        {106, -1, -1, sizeof(::milvus::proto::common::ReplicateInfo)},
        {116, 125, -1, sizeof(::milvus::proto::common::MsgHeader)},
        {126, 136, -1, sizeof(::milvus::proto::common::DMLMsgHeader)},
        {138, -1, -1, sizeof(::milvus::proto::common::PrivilegeExt)},
        {150, -1, -1, sizeof(::milvus::proto::common::SegmentStats)},
        {160, 170, -1, sizeof(::milvus::proto::common::ClientInfo_ReservedEntry_DoNotUse)},
        {172, -1, -1, sizeof(::milvus::proto::common::ClientInfo)},
        {186, 196, -1, sizeof(::milvus::proto::common::ServerInfo_ReservedEntry_DoNotUse)},
        {198, -1, -1, sizeof(::milvus::proto::common::ServerInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::milvus::proto::common::_Status_default_instance_._instance,
    &::milvus::proto::common::_KeyValuePair_default_instance_._instance,
    &::milvus::proto::common::_KeyDataPair_default_instance_._instance,
    &::milvus::proto::common::_Blob_default_instance_._instance,
    &::milvus::proto::common::_PlaceholderValue_default_instance_._instance,
    &::milvus::proto::common::_PlaceholderGroup_default_instance_._instance,
    &::milvus::proto::common::_Address_default_instance_._instance,
    &::milvus::proto::common::_MsgBase_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::milvus::proto::common::_MsgBase_default_instance_._instance,
    &::milvus::proto::common::_ReplicateInfo_default_instance_._instance,
    &::milvus::proto::common::_MsgHeader_default_instance_._instance,
    &::milvus::proto::common::_DMLMsgHeader_default_instance_._instance,
    &::milvus::proto::common::_PrivilegeExt_default_instance_._instance,
    &::milvus::proto::common::_SegmentStats_default_instance_._instance,
    &::milvus::proto::common::_ClientInfo_ReservedEntry_DoNotUse_default_instance_._instance,
    &::milvus::proto::common::_ClientInfo_default_instance_._instance,
    &::milvus::proto::common::_ServerInfo_ReservedEntry_DoNotUse_default_instance_._instance,
    &::milvus::proto::common::_ServerInfo_default_instance_._instance,
};
const char descriptor_table_protodef_common_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014common.proto\022\023milvus.proto.common\032 goo"
    "gle/protobuf/descriptor.proto\"\201\001\n\006Status"
    "\0226\n\nerror_code\030\001 \001(\0162\036.milvus.proto.comm"
    "on.ErrorCodeB\002\030\001\022\016\n\006reason\030\002 \001(\t\022\014\n\004code"
    "\030\003 \001(\005\022\021\n\tretriable\030\004 \001(\010\022\016\n\006detail\030\005 \001("
    "\t\"*\n\014KeyValuePair\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
    "\002 \001(\t\"(\n\013KeyDataPair\022\013\n\003key\030\001 \001(\t\022\014\n\004dat"
    "a\030\002 \001(\014\"\025\n\004Blob\022\r\n\005value\030\001 \001(\014\"c\n\020Placeh"
    "olderValue\022\013\n\003tag\030\001 \001(\t\0222\n\004type\030\002 \001(\0162$."
    "milvus.proto.common.PlaceholderType\022\016\n\006v"
    "alues\030\003 \003(\014\"O\n\020PlaceholderGroup\022;\n\014place"
    "holders\030\001 \003(\0132%.milvus.proto.common.Plac"
    "eholderValue\"#\n\007Address\022\n\n\002ip\030\001 \001(\t\022\014\n\004p"
    "ort\030\002 \001(\003\"\257\002\n\007MsgBase\022.\n\010msg_type\030\001 \001(\0162"
    "\034.milvus.proto.common.MsgType\022\r\n\005msgID\030\002"
    " \001(\003\022\021\n\ttimestamp\030\003 \001(\004\022\020\n\010sourceID\030\004 \001("
    "\003\022\020\n\010targetID\030\005 \001(\003\022@\n\nproperties\030\006 \003(\0132"
    ",.milvus.proto.common.MsgBase.Properties"
    "Entry\0229\n\rreplicateInfo\030\007 \001(\0132\".milvus.pr"
    "oto.common.ReplicateInfo\0321\n\017PropertiesEn"
    "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\":\n\rR"
    "eplicateInfo\022\023\n\013isReplicate\030\001 \001(\010\022\024\n\014msg"
    "Timestamp\030\002 \001(\004\"7\n\tMsgHeader\022*\n\004base\030\001 \001"
    "(\0132\034.milvus.proto.common.MsgBase\"M\n\014DMLM"
    "sgHeader\022*\n\004base\030\001 \001(\0132\034.milvus.proto.co"
    "mmon.MsgBase\022\021\n\tshardName\030\002 \001(\t\"\273\001\n\014Priv"
    "ilegeExt\0224\n\013object_type\030\001 \001(\0162\037.milvus.p"
    "roto.common.ObjectType\022>\n\020object_privile"
    "ge\030\002 \001(\0162$.milvus.proto.common.ObjectPri"
    "vilege\022\031\n\021object_name_index\030\003 \001(\005\022\032\n\022obj"
    "ect_name_indexs\030\004 \001(\005\"2\n\014SegmentStats\022\021\n"
    "\tSegmentID\030\001 \001(\003\022\017\n\007NumRows\030\002 \001(\003\"\325\001\n\nCl"
    "ientInfo\022\020\n\010sdk_type\030\001 \001(\t\022\023\n\013sdk_versio"
    "n\030\002 \001(\t\022\022\n\nlocal_time\030\003 \001(\t\022\014\n\004user\030\004 \001("
    "\t\022\014\n\004host\030\005 \001(\t\022\?\n\010reserved\030\006 \003(\0132-.milv"
    "us.proto.common.ClientInfo.ReservedEntry"
    "\032/\n\rReservedEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
    "\002 \001(\t:\0028\001\"\343\001\n\nServerInfo\022\022\n\nbuild_tags\030\001"
    " \001(\t\022\022\n\nbuild_time\030\002 \001(\t\022\022\n\ngit_commit\030\003"
    " \001(\t\022\022\n\ngo_version\030\004 \001(\t\022\023\n\013deploy_mode\030"
    "\005 \001(\t\022\?\n\010reserved\030\006 \003(\0132-.milvus.proto.c"
    "ommon.ServerInfo.ReservedEntry\032/\n\rReserv"
    "edEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001*"
    "\307\n\n\tErrorCode\022\013\n\007Success\020\000\022\023\n\017Unexpected"
    "Error\020\001\022\021\n\rConnectFailed\020\002\022\024\n\020Permission"
    "Denied\020\003\022\027\n\023CollectionNotExists\020\004\022\023\n\017Ill"
    "egalArgument\020\005\022\024\n\020IllegalDimension\020\007\022\024\n\020"
    "IllegalIndexType\020\010\022\031\n\025IllegalCollectionN"
    "ame\020\t\022\017\n\013IllegalTOPK\020\n\022\024\n\020IllegalRowReco"
    "rd\020\013\022\023\n\017IllegalVectorID\020\014\022\027\n\023IllegalSear"
    "chResult\020\r\022\020\n\014FileNotFound\020\016\022\016\n\nMetaFail"
    "ed\020\017\022\017\n\013CacheFailed\020\020\022\026\n\022CannotCreateFol"
    "der\020\021\022\024\n\020CannotCreateFile\020\022\022\026\n\022CannotDel"
    "eteFolder\020\023\022\024\n\020CannotDeleteFile\020\024\022\023\n\017Bui"
    "ldIndexError\020\025\022\020\n\014IllegalNLIST\020\026\022\025\n\021Ille"
    "galMetricType\020\027\022\017\n\013OutOfMemory\020\030\022\021\n\rInde"
    "xNotExist\020\031\022\023\n\017EmptyCollection\020\032\022\033\n\027Upda"
    "teImportTaskFailure\020\033\022\032\n\026CollectionNameN"
    "otFound\020\034\022\033\n\027CreateCredentialFailure\020\035\022\033"
    "\n\027UpdateCredentialFailure\020\036\022\033\n\027DeleteCre"
    "dentialFailure\020\037\022\030\n\024GetCredentialFailure"
    "\020 \022\030\n\024ListCredUsersFailure\020!\022\022\n\016GetUserF"
    "ailure\020\"\022\025\n\021CreateRoleFailure\020#\022\023\n\017DropR"
    "oleFailure\020$\022\032\n\026OperateUserRoleFailure\020%"
    "\022\025\n\021SelectRoleFailure\020&\022\025\n\021SelectUserFai"
    "lure\020\'\022\031\n\025SelectResourceFailure\020(\022\033\n\027Ope"
    "ratePrivilegeFailure\020)\022\026\n\022SelectGrantFai"
    "lure\020*\022!\n\035RefreshPolicyInfoCacheFailure\020"
    "+\022\025\n\021ListPolicyFailure\020,\022\022\n\016NotShardLead"
    "er\020-\022\026\n\022NoReplicaAvailable\020.\022\023\n\017SegmentN"
    "otFound\020/\022\r\n\tForceDeny\0200\022\r\n\tRateLimit\0201\022"
    "\022\n\016NodeIDNotMatch\0202\022\024\n\020UpsertAutoIDTrue\020"
    "3\022\034\n\030InsufficientMemoryToLoad\0204\022\030\n\024Memor"
    "yQuotaExhausted\0205\022\026\n\022DiskQuotaExhausted\020"
    "6\022\025\n\021TimeTickLongDelay\0207\022\021\n\rNotReadyServ"
    "e\0208\022\033\n\027NotReadyCoordActivating\0209\022\017\n\013Data"
    "CoordNA\020d\022\022\n\rDDRequestRace\020\350\007\032\002\030\001*c\n\nInd"
    "exState\022\022\n\016IndexStateNone\020\000\022\014\n\010Unissued\020"
    "\001\022\016\n\nInProgress\020\002\022\014\n\010Finished\020\003\022\n\n\006Faile"
    "d\020\004\022\t\n\005Retry\020\005*\202\001\n\014SegmentState\022\024\n\020Segme"
    "ntStateNone\020\000\022\014\n\010NotExist\020\001\022\013\n\007Growing\020\002"
    "\022\n\n\006Sealed\020\003\022\013\n\007Flushed\020\004\022\014\n\010Flushing\020\005\022"
    "\013\n\007Dropped\020\006\022\r\n\tImporting\020\007*}\n\017Placehold"
    "erType\022\010\n\004None\020\000\022\020\n\014BinaryVector\020d\022\017\n\013Fl"
    "oatVector\020e\022\021\n\rFloat16Vector\020f\022\022\n\016BFloat"
    "16Vector\020g\022\t\n\005Int64\020\005\022\013\n\007VarChar\020\025*\305\020\n\007M"
    "sgType\022\r\n\tUndefined\020\000\022\024\n\020CreateCollectio"
    "n\020d\022\022\n\016DropCollection\020e\022\021\n\rHasCollection"
    "\020f\022\026\n\022DescribeCollection\020g\022\023\n\017ShowCollec"
    "tions\020h\022\024\n\020GetSystemConfigs\020i\022\022\n\016LoadCol"
    "lection\020j\022\025\n\021ReleaseCollection\020k\022\017\n\013Crea"
    "teAlias\020l\022\r\n\tDropAlias\020m\022\016\n\nAlterAlias\020n"
    "\022\023\n\017AlterCollection\020o\022\024\n\020RenameCollectio"
    "n\020p\022\021\n\rDescribeAlias\020q\022\017\n\013ListAliases\020r\022"
    "\024\n\017CreatePartition\020\310\001\022\022\n\rDropPartition\020\311"
    "\001\022\021\n\014HasPartition\020\312\001\022\026\n\021DescribePartitio"
    "n\020\313\001\022\023\n\016ShowPartitions\020\314\001\022\023\n\016LoadPartiti"
    "ons\020\315\001\022\026\n\021ReleasePartitions\020\316\001\022\021\n\014ShowSe"
    "gments\020\372\001\022\024\n\017DescribeSegment\020\373\001\022\021\n\014LoadS"
    "egments\020\374\001\022\024\n\017ReleaseSegments\020\375\001\022\024\n\017Hand"
    "offSegments\020\376\001\022\030\n\023LoadBalanceSegments\020\377\001"
    "\022\025\n\020DescribeSegments\020\200\002\022\034\n\027FederListInde"
    "xedSegment\020\201\002\022\"\n\035FederDescribeSegmentInd"
    "exData\020\202\002\022\020\n\013CreateIndex\020\254\002\022\022\n\rDescribeI"
    "ndex\020\255\002\022\016\n\tDropIndex\020\256\002\022\027\n\022GetIndexStati"
    "stics\020\257\002\022\017\n\nAlterIndex\020\260\002\022\013\n\006Insert\020\220\003\022\013"
    "\n\006Delete\020\221\003\022\n\n\005Flush\020\222\003\022\027\n\022ResendSegment"
    "Stats\020\223\003\022\013\n\006Upsert\020\224\003\022\013\n\006Search\020\364\003\022\021\n\014Se"
    "archResult\020\365\003\022\022\n\rGetIndexState\020\366\003\022\032\n\025Get"
    "IndexBuildProgress\020\367\003\022\034\n\027GetCollectionSt"
    "atistics\020\370\003\022\033\n\026GetPartitionStatistics\020\371\003"
    "\022\r\n\010Retrieve\020\372\003\022\023\n\016RetrieveResult\020\373\003\022\024\n\017"
    "WatchDmChannels\020\374\003\022\025\n\020RemoveDmChannels\020\375"
    "\003\022\027\n\022WatchQueryChannels\020\376\003\022\030\n\023RemoveQuer"
    "yChannels\020\377\003\022\035\n\030SealedSegmentsChangeInfo"
    "\020\200\004\022\027\n\022WatchDeltaChannels\020\201\004\022\024\n\017GetShard"
    "Leaders\020\202\004\022\020\n\013GetReplicas\020\203\004\022\023\n\016UnsubDmC"
    "hannel\020\204\004\022\024\n\017GetDistribution\020\205\004\022\025\n\020SyncD"
    "istribution\020\206\004\022\020\n\013SegmentInfo\020\330\004\022\017\n\nSyst"
    "emInfo\020\331\004\022\024\n\017GetRecoveryInfo\020\332\004\022\024\n\017GetSe"
    "gmentState\020\333\004\022\r\n\010TimeTick\020\260\t\022\023\n\016QueryNod"
    "eStats\020\261\t\022\016\n\tLoadIndex\020\262\t\022\016\n\tRequestID\020\263"
    "\t\022\017\n\nRequestTSO\020\264\t\022\024\n\017AllocateSegment\020\265\t"
    "\022\026\n\021SegmentStatistics\020\266\t\022\025\n\020SegmentFlush"
    "Done\020\267\t\022\017\n\nDataNodeTt\020\270\t\022\014\n\007Connect\020\271\t\022\024"
    "\n\017ListClientInfos\020\272\t\022\023\n\016AllocTimestamp\020\273"
    "\t\022\025\n\020CreateCredential\020\334\013\022\022\n\rGetCredentia"
    "l\020\335\013\022\025\n\020DeleteCredential\020\336\013\022\025\n\020UpdateCre"
    "dential\020\337\013\022\026\n\021ListCredUsernames\020\340\013\022\017\n\nCr"
    "eateRole\020\300\014\022\r\n\010DropRole\020\301\014\022\024\n\017OperateUse"
    "rRole\020\302\014\022\017\n\nSelectRole\020\303\014\022\017\n\nSelectUser\020"
    "\304\014\022\023\n\016SelectResource\020\305\014\022\025\n\020OperatePrivil"
    "ege\020\306\014\022\020\n\013SelectGrant\020\307\014\022\033\n\026RefreshPolic"
    "yInfoCache\020\310\014\022\017\n\nListPolicy\020\311\014\022\030\n\023Create"
    "ResourceGroup\020\244\r\022\026\n\021DropResourceGroup\020\245\r"
    "\022\027\n\022ListResourceGroups\020\246\r\022\032\n\025DescribeRes"
    "ourceGroup\020\247\r\022\021\n\014TransferNode\020\250\r\022\024\n\017Tran"
    "sferReplica\020\251\r\022\023\n\016CreateDatabase\020\211\016\022\021\n\014D"
    "ropDatabase\020\212\016\022\022\n\rListDatabases\020\213\016*\"\n\007Ds"
    "lType\022\007\n\003Dsl\020\000\022\016\n\nBoolExprV1\020\001*B\n\017Compac"
    "tionState\022\021\n\rUndefiedState\020\000\022\r\n\tExecutin"
    "g\020\001\022\r\n\tCompleted\020\002*X\n\020ConsistencyLevel\022\n"
    "\n\006Strong\020\000\022\013\n\007Session\020\001\022\013\n\007Bounded\020\002\022\016\n\n"
    "Eventually\020\003\022\016\n\nCustomized\020\004*\236\001\n\013ImportS"
    "tate\022\021\n\rImportPending\020\000\022\020\n\014ImportFailed\020"
    "\001\022\021\n\rImportStarted\020\002\022\023\n\017ImportPersisted\020"
    "\005\022\021\n\rImportFlushed\020\010\022\023\n\017ImportCompleted\020"
    "\006\022\032\n\026ImportFailedAndCleaned\020\007*2\n\nObjectT"
    "ype\022\016\n\nCollection\020\000\022\n\n\006Global\020\001\022\010\n\004User\020"
    "\002*\227\n\n\017ObjectPrivilege\022\020\n\014PrivilegeAll\020\000\022"
    "\035\n\031PrivilegeCreateCollection\020\001\022\033\n\027Privil"
    "egeDropCollection\020\002\022\037\n\033PrivilegeDescribe"
    "Collection\020\003\022\034\n\030PrivilegeShowCollections"
    "\020\004\022\021\n\rPrivilegeLoad\020\005\022\024\n\020PrivilegeReleas"
    "e\020\006\022\027\n\023PrivilegeCompaction\020\007\022\023\n\017Privileg"
    "eInsert\020\010\022\023\n\017PrivilegeDelete\020\t\022\032\n\026Privil"
    "egeGetStatistics\020\n\022\030\n\024PrivilegeCreateInd"
    "ex\020\013\022\030\n\024PrivilegeIndexDetail\020\014\022\026\n\022Privil"
    "egeDropIndex\020\r\022\023\n\017PrivilegeSearch\020\016\022\022\n\016P"
    "rivilegeFlush\020\017\022\022\n\016PrivilegeQuery\020\020\022\030\n\024P"
    "rivilegeLoadBalance\020\021\022\023\n\017PrivilegeImport"
    "\020\022\022\034\n\030PrivilegeCreateOwnership\020\023\022\027\n\023Priv"
    "ilegeUpdateUser\020\024\022\032\n\026PrivilegeDropOwners"
    "hip\020\025\022\034\n\030PrivilegeSelectOwnership\020\026\022\034\n\030P"
    "rivilegeManageOwnership\020\027\022\027\n\023PrivilegeSe"
    "lectUser\020\030\022\023\n\017PrivilegeUpsert\020\031\022 \n\034Privi"
    "legeCreateResourceGroup\020\032\022\036\n\032PrivilegeDr"
    "opResourceGroup\020\033\022\"\n\036PrivilegeDescribeRe"
    "sourceGroup\020\034\022\037\n\033PrivilegeListResourceGr"
    "oups\020\035\022\031\n\025PrivilegeTransferNode\020\036\022\034\n\030Pri"
    "vilegeTransferReplica\020\037\022\037\n\033PrivilegeGetL"
    "oadingProgress\020 \022\031\n\025PrivilegeGetLoadStat"
    "e\020!\022\035\n\031PrivilegeRenameCollection\020\"\022\033\n\027Pr"
    "ivilegeCreateDatabase\020#\022\031\n\025PrivilegeDrop"
    "Database\020$\022\032\n\026PrivilegeListDatabases\020%\022\025"
    "\n\021PrivilegeFlushAll\020&\022\034\n\030PrivilegeCreate"
    "Partition\020\'\022\032\n\026PrivilegeDropPartition\020(\022"
    "\033\n\027PrivilegeShowPartitions\020)\022\031\n\025Privileg"
    "eHasPartition\020*\022\032\n\026PrivilegeGetFlushStat"
    "e\020+\022\030\n\024PrivilegeCreateAlias\020,\022\026\n\022Privile"
    "geDropAlias\020-\022\032\n\026PrivilegeDescribeAlias\020"
    ".\022\030\n\024PrivilegeListAliases\020/*S\n\tStateCode"
    "\022\020\n\014Initializing\020\000\022\013\n\007Healthy\020\001\022\014\n\010Abnor"
    "mal\020\002\022\013\n\007StandBy\020\003\022\014\n\010Stopping\020\004*c\n\tLoad"
    "State\022\025\n\021LoadStateNotExist\020\000\022\024\n\020LoadStat"
    "eNotLoad\020\001\022\024\n\020LoadStateLoading\020\002\022\023\n\017Load"
    "StateLoaded\020\003:^\n\021privilege_ext_obj\022\037.goo"
    "gle.protobuf.MessageOptions\030\351\007 \001(\0132!.mil"
    "vus.proto.common.PrivilegeExtb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_common_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::absl::once_flag descriptor_table_common_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_common_2eproto = {
    false,
    false,
    7557,
    descriptor_table_protodef_common_2eproto,
    "common.proto",
    &descriptor_table_common_2eproto_once,
    descriptor_table_common_2eproto_deps,
    1,
    18,
    schemas,
    file_default_instances,
    TableStruct_common_2eproto::offsets,
    file_level_metadata_common_2eproto,
    file_level_enum_descriptors_common_2eproto,
    file_level_service_descriptors_common_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_common_2eproto_getter() {
  return &descriptor_table_common_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_common_2eproto(&descriptor_table_common_2eproto);
namespace milvus {
namespace proto {
namespace common {
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ErrorCode_internal_data_[] = {
    393216u, 65632u, 4294967294u, 1048575u, 1073741824u, 1000u, };
bool ErrorCode_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, ErrorCode_internal_data_);
}
const ::google::protobuf::EnumDescriptor* IndexState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t IndexState_internal_data_[] = {
    393216u, 0u, };
bool IndexState_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* SegmentState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t SegmentState_internal_data_[] = {
    524288u, 0u, };
bool SegmentState_IsValid(int value) {
  return 0 <= value && value <= 7;
}
const ::google::protobuf::EnumDescriptor* PlaceholderType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t PlaceholderType_internal_data_[] = {
    65536u, 128u, 1048592u, 0u, 0u, 120u, };
bool PlaceholderType_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, PlaceholderType_internal_data_);
}
const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t MsgType_internal_data_[] = {
    65536u, 2359904u, 0u, 0u, 0u, 262136u, 0u, 0u, 16256u, 4261412864u, 3u, 63488u, 0u, 0u, 1015808u, 0u, 0u, 4294443008u, 63u, 0u, 125829120u, 1603u, 1500u, 1701u, 1207u, 1504u, 1607u, 1705u, 1203u, 1210u, 1502u, 1601u, 1605u, 1609u, 1703u, 1802u, 1201u, 1205u, 1209u, 1211u, 1501u, 1503u, 1600u, 1602u, 1604u, 1606u, 1608u, 1700u, 1702u, 1704u, 1801u, 1803u, 1200u, 1202u, 1204u, 1206u, 1208u, };
bool MsgType_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, MsgType_internal_data_);
}
const ::google::protobuf::EnumDescriptor* DslType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t DslType_internal_data_[] = {
    131072u, 0u, };
bool DslType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* CompactionState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t CompactionState_internal_data_[] = {
    196608u, 0u, };
bool CompactionState_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* ConsistencyLevel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t ConsistencyLevel_internal_data_[] = {
    327680u, 0u, };
bool ConsistencyLevel_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* ImportState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[8];
}
PROTOBUF_CONSTINIT const uint32_t ImportState_internal_data_[] = {
    196608u, 32u, 60u, };
bool ImportState_IsValid(int value) {
  return 0 <= value && value <= 8 && ((487u >> value) & 1) != 0;
}
const ::google::protobuf::EnumDescriptor* ObjectType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[9];
}
PROTOBUF_CONSTINIT const uint32_t ObjectType_internal_data_[] = {
    196608u, 0u, };
bool ObjectType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* ObjectPrivilege_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[10];
}
PROTOBUF_CONSTINIT const uint32_t ObjectPrivilege_internal_data_[] = {
    3145728u, 0u, };
bool ObjectPrivilege_IsValid(int value) {
  return 0 <= value && value <= 47;
}
const ::google::protobuf::EnumDescriptor* StateCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[11];
}
PROTOBUF_CONSTINIT const uint32_t StateCode_internal_data_[] = {
    327680u, 0u, };
bool StateCode_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* LoadState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[12];
}
PROTOBUF_CONSTINIT const uint32_t LoadState_internal_data_[] = {
    262144u, 0u, };
bool LoadState_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class Status::_Internal {
 public:
};

Status::Status(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.common.Status)
}
inline PROTOBUF_NDEBUG_INLINE Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : reason_(arena, from.reason_),
        detail_(arena, from.detail_),
        _cached_size_{0} {}

Status::Status(
    ::google::protobuf::Arena* arena,
    const Status& from)
    : ::google::protobuf::Message(arena) {
  Status* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, error_code_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, error_code_),
           offsetof(Impl_, retriable_) -
               offsetof(Impl_, error_code_) +
               sizeof(Impl_::retriable_));

  // @@protoc_insertion_point(copy_constructor:milvus.proto.common.Status)
}
inline PROTOBUF_NDEBUG_INLINE Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : reason_(arena),
        detail_(arena),
        _cached_size_{0} {}

inline void Status::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, error_code_),
           0,
           offsetof(Impl_, retriable_) -
               offsetof(Impl_, error_code_) +
               sizeof(Impl_::retriable_));
}
Status::~Status() {
  // @@protoc_insertion_point(destructor:milvus.proto.common.Status)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Status::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.reason_.Destroy();
  _impl_.detail_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.common.Status)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reason_.ClearToEmpty();
  _impl_.detail_.ClearToEmpty();
  ::memset(&_impl_.error_code_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.retriable_) -
      reinterpret_cast<char*>(&_impl_.error_code_)) + sizeof(_impl_.retriable_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Status::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 47, 2> Status::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Status_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .milvus.proto.common.ErrorCode error_code = 1 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Status, _impl_.error_code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.error_code_)}},
    // string reason = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.reason_)}},
    // int32 code = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Status, _impl_.code_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.code_)}},
    // bool retriable = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Status, _impl_.retriable_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.retriable_)}},
    // string detail = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.detail_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .milvus.proto.common.ErrorCode error_code = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.error_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string reason = 2;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 code = 3;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool retriable = 4;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.retriable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string detail = 5;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.detail_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\0\6\0\0\6\0\0"
    "milvus.proto.common.Status"
    "reason"
    "detail"
  }},
};

::uint8_t* Status::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.common.Status)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .milvus.proto.common.ErrorCode error_code = 1 [deprecated = true];
  if (this->_internal_error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_error_code(), target);
  }

  // string reason = 2;
  if (!this->_internal_reason().empty()) {
    const std::string& _s = this->_internal_reason();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.Status.reason");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 code = 3;
  if (this->_internal_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_code(), target);
  }

  // bool retriable = 4;
  if (this->_internal_retriable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_retriable(), target);
  }

  // string detail = 5;
  if (!this->_internal_detail().empty()) {
    const std::string& _s = this->_internal_detail();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.Status.detail");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.common.Status)
  return target;
}

::size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.common.Status)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reason = 2;
  if (!this->_internal_reason().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_reason());
  }

  // string detail = 5;
  if (!this->_internal_detail().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_detail());
  }

  // .milvus.proto.common.ErrorCode error_code = 1 [deprecated = true];
  if (this->_internal_error_code() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_error_code());
  }

  // int32 code = 3;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_code());
  }

  // bool retriable = 4;
  if (this->_internal_retriable() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Status::_class_data_ = {
    Status::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Status::GetClassData() const {
  return &_class_data_;
}

void Status::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Status*>(&to_msg);
  auto& from = static_cast<const Status&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.common.Status)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_detail().empty()) {
    _this->_internal_set_detail(from._internal_detail());
  }
  if (from._internal_error_code() != 0) {
    _this->_internal_set_error_code(from._internal_error_code());
  }
  if (from._internal_code() != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  if (from._internal_retriable() != 0) {
    _this->_internal_set_retriable(from._internal_retriable());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.common.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Status::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Status::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Status::InternalSwap(Status* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.detail_, &other->_impl_.detail_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Status, _impl_.retriable_)
      + sizeof(Status::_impl_.retriable_)
      - PROTOBUF_FIELD_OFFSET(Status, _impl_.error_code_)>(
          reinterpret_cast<char*>(&_impl_.error_code_),
          reinterpret_cast<char*>(&other->_impl_.error_code_));
}

::google::protobuf::Metadata Status::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[0]);
}
// ===================================================================

class KeyValuePair::_Internal {
 public:
};

KeyValuePair::KeyValuePair(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.common.KeyValuePair)
}
inline PROTOBUF_NDEBUG_INLINE KeyValuePair::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : key_(arena, from.key_),
        value_(arena, from.value_),
        _cached_size_{0} {}

KeyValuePair::KeyValuePair(
    ::google::protobuf::Arena* arena,
    const KeyValuePair& from)
    : ::google::protobuf::Message(arena) {
  KeyValuePair* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.common.KeyValuePair)
}
inline PROTOBUF_NDEBUG_INLINE KeyValuePair::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        value_(arena),
        _cached_size_{0} {}

inline void KeyValuePair::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
KeyValuePair::~KeyValuePair() {
  // @@protoc_insertion_point(destructor:milvus.proto.common.KeyValuePair)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void KeyValuePair::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void KeyValuePair::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.common.KeyValuePair)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* KeyValuePair::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> KeyValuePair::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_KeyValuePair_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(KeyValuePair, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(KeyValuePair, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(KeyValuePair, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(KeyValuePair, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\3\5\0\0\0\0\0"
    "milvus.proto.common.KeyValuePair"
    "key"
    "value"
  }},
};

::uint8_t* KeyValuePair::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.common.KeyValuePair)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.KeyValuePair.key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.KeyValuePair.value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.common.KeyValuePair)
  return target;
}

::size_t KeyValuePair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.common.KeyValuePair)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key());
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData KeyValuePair::_class_data_ = {
    KeyValuePair::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* KeyValuePair::GetClassData() const {
  return &_class_data_;
}

void KeyValuePair::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<KeyValuePair*>(&to_msg);
  auto& from = static_cast<const KeyValuePair&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.common.KeyValuePair)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void KeyValuePair::CopyFrom(const KeyValuePair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.common.KeyValuePair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool KeyValuePair::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* KeyValuePair::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void KeyValuePair::InternalSwap(KeyValuePair* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata KeyValuePair::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[1]);
}
// ===================================================================

class KeyDataPair::_Internal {
 public:
};

KeyDataPair::KeyDataPair(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.common.KeyDataPair)
}
inline PROTOBUF_NDEBUG_INLINE KeyDataPair::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : key_(arena, from.key_),
        data_(arena, from.data_),
        _cached_size_{0} {}

KeyDataPair::KeyDataPair(
    ::google::protobuf::Arena* arena,
    const KeyDataPair& from)
    : ::google::protobuf::Message(arena) {
  KeyDataPair* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.common.KeyDataPair)
}
inline PROTOBUF_NDEBUG_INLINE KeyDataPair::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        data_(arena),
        _cached_size_{0} {}

inline void KeyDataPair::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
KeyDataPair::~KeyDataPair() {
  // @@protoc_insertion_point(destructor:milvus.proto.common.KeyDataPair)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void KeyDataPair::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void KeyDataPair::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.common.KeyDataPair)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* KeyDataPair::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> KeyDataPair::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_KeyDataPair_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(KeyDataPair, _impl_.data_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(KeyDataPair, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(KeyDataPair, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(KeyDataPair, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\3\0\0\0\0\0\0"
    "milvus.proto.common.KeyDataPair"
    "key"
  }},
};

::uint8_t* KeyDataPair::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.common.KeyDataPair)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.KeyDataPair.key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.common.KeyDataPair)
  return target;
}

::size_t KeyDataPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.common.KeyDataPair)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key());
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData KeyDataPair::_class_data_ = {
    KeyDataPair::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* KeyDataPair::GetClassData() const {
  return &_class_data_;
}

void KeyDataPair::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<KeyDataPair*>(&to_msg);
  auto& from = static_cast<const KeyDataPair&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.common.KeyDataPair)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void KeyDataPair::CopyFrom(const KeyDataPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.common.KeyDataPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool KeyDataPair::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* KeyDataPair::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void KeyDataPair::InternalSwap(KeyDataPair* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata KeyDataPair::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[2]);
}
// ===================================================================

class Blob::_Internal {
 public:
};

Blob::Blob(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.common.Blob)
}
inline PROTOBUF_NDEBUG_INLINE Blob::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : value_(arena, from.value_),
        _cached_size_{0} {}

Blob::Blob(
    ::google::protobuf::Arena* arena,
    const Blob& from)
    : ::google::protobuf::Message(arena) {
  Blob* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.common.Blob)
}
inline PROTOBUF_NDEBUG_INLINE Blob::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_(arena),
        _cached_size_{0} {}

inline void Blob::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Blob::~Blob() {
  // @@protoc_insertion_point(destructor:milvus.proto.common.Blob)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Blob::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Blob::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.common.Blob)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Blob::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Blob::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Blob_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes value = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Blob, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes value = 1;
    {PROTOBUF_FIELD_OFFSET(Blob, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Blob::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.common.Blob)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes value = 1;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.common.Blob)
  return target;
}

::size_t Blob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.common.Blob)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 1;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Blob::_class_data_ = {
    Blob::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Blob::GetClassData() const {
  return &_class_data_;
}

void Blob::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Blob*>(&to_msg);
  auto& from = static_cast<const Blob&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.common.Blob)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Blob::CopyFrom(const Blob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.common.Blob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Blob::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Blob::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Blob::InternalSwap(Blob* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata Blob::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[3]);
}
// ===================================================================

class PlaceholderValue::_Internal {
 public:
};

PlaceholderValue::PlaceholderValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.common.PlaceholderValue)
}
inline PROTOBUF_NDEBUG_INLINE PlaceholderValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : values_{visibility, arena, from.values_},
        tag_(arena, from.tag_),
        _cached_size_{0} {}

PlaceholderValue::PlaceholderValue(
    ::google::protobuf::Arena* arena,
    const PlaceholderValue& from)
    : ::google::protobuf::Message(arena) {
  PlaceholderValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:milvus.proto.common.PlaceholderValue)
}
inline PROTOBUF_NDEBUG_INLINE PlaceholderValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : values_{visibility, arena},
        tag_(arena),
        _cached_size_{0} {}

inline void PlaceholderValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
PlaceholderValue::~PlaceholderValue() {
  // @@protoc_insertion_point(destructor:milvus.proto.common.PlaceholderValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlaceholderValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.tag_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PlaceholderValue::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.common.PlaceholderValue)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _impl_.tag_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PlaceholderValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 48, 2> PlaceholderValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PlaceholderValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string tag = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PlaceholderValue, _impl_.tag_)}},
    // .milvus.proto.common.PlaceholderType type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlaceholderValue, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PlaceholderValue, _impl_.type_)}},
    // repeated bytes values = 3;
    {::_pbi::TcParser::FastBR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PlaceholderValue, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tag = 1;
    {PROTOBUF_FIELD_OFFSET(PlaceholderValue, _impl_.tag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .milvus.proto.common.PlaceholderType type = 2;
    {PROTOBUF_FIELD_OFFSET(PlaceholderValue, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated bytes values = 3;
    {PROTOBUF_FIELD_OFFSET(PlaceholderValue, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\44\3\0\0\0\0\0\0"
    "milvus.proto.common.PlaceholderValue"
    "tag"
  }},
};

::uint8_t* PlaceholderValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.common.PlaceholderValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string tag = 1;
  if (!this->_internal_tag().empty()) {
    const std::string& _s = this->_internal_tag();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.PlaceholderValue.tag");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .milvus.proto.common.PlaceholderType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  // repeated bytes values = 3;
  for (int i = 0, n = this->_internal_values_size(); i < n; ++i) {
    const auto& s = this->_internal_values().Get(i);
    target = stream->WriteBytes(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.common.PlaceholderValue)
  return target;
}

::size_t PlaceholderValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.common.PlaceholderValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes values = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_values().size());
  for (int i = 0, n = _internal_values().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_values().Get(i));
  }
  // string tag = 1;
  if (!this->_internal_tag().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tag());
  }

  // .milvus.proto.common.PlaceholderType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PlaceholderValue::_class_data_ = {
    PlaceholderValue::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PlaceholderValue::GetClassData() const {
  return &_class_data_;
}

void PlaceholderValue::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PlaceholderValue*>(&to_msg);
  auto& from = static_cast<const PlaceholderValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.common.PlaceholderValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  if (!from._internal_tag().empty()) {
    _this->_internal_set_tag(from._internal_tag());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlaceholderValue::CopyFrom(const PlaceholderValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.common.PlaceholderValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlaceholderValue::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PlaceholderValue::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PlaceholderValue::InternalSwap(PlaceholderValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_, &other->_impl_.tag_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata PlaceholderValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[4]);
}
// ===================================================================

class PlaceholderGroup::_Internal {
 public:
};

PlaceholderGroup::PlaceholderGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.common.PlaceholderGroup)
}
inline PROTOBUF_NDEBUG_INLINE PlaceholderGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : placeholders_{visibility, arena, from.placeholders_},
        _cached_size_{0} {}

PlaceholderGroup::PlaceholderGroup(
    ::google::protobuf::Arena* arena,
    const PlaceholderGroup& from)
    : ::google::protobuf::Message(arena) {
  PlaceholderGroup* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.common.PlaceholderGroup)
}
inline PROTOBUF_NDEBUG_INLINE PlaceholderGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : placeholders_{visibility, arena},
        _cached_size_{0} {}

inline void PlaceholderGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PlaceholderGroup::~PlaceholderGroup() {
  // @@protoc_insertion_point(destructor:milvus.proto.common.PlaceholderGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlaceholderGroup::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PlaceholderGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.common.PlaceholderGroup)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.placeholders_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PlaceholderGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PlaceholderGroup::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PlaceholderGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .milvus.proto.common.PlaceholderValue placeholders = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PlaceholderGroup, _impl_.placeholders_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .milvus.proto.common.PlaceholderValue placeholders = 1;
    {PROTOBUF_FIELD_OFFSET(PlaceholderGroup, _impl_.placeholders_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::milvus::proto::common::PlaceholderValue>()},
  }}, {{
  }},
};

::uint8_t* PlaceholderGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.common.PlaceholderGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .milvus.proto.common.PlaceholderValue placeholders = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_placeholders_size()); i < n; i++) {
    const auto& repfield = this->_internal_placeholders().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.common.PlaceholderGroup)
  return target;
}

::size_t PlaceholderGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.common.PlaceholderGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .milvus.proto.common.PlaceholderValue placeholders = 1;
  total_size += 1UL * this->_internal_placeholders_size();
  for (const auto& msg : this->_internal_placeholders()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PlaceholderGroup::_class_data_ = {
    PlaceholderGroup::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PlaceholderGroup::GetClassData() const {
  return &_class_data_;
}

void PlaceholderGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PlaceholderGroup*>(&to_msg);
  auto& from = static_cast<const PlaceholderGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.common.PlaceholderGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_placeholders()->MergeFrom(
      from._internal_placeholders());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlaceholderGroup::CopyFrom(const PlaceholderGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.common.PlaceholderGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlaceholderGroup::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PlaceholderGroup::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PlaceholderGroup::InternalSwap(PlaceholderGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.placeholders_.InternalSwap(&other->_impl_.placeholders_);
}

::google::protobuf::Metadata PlaceholderGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[5]);
}
// ===================================================================

class Address::_Internal {
 public:
};

Address::Address(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.common.Address)
}
inline PROTOBUF_NDEBUG_INLINE Address::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : ip_(arena, from.ip_),
        _cached_size_{0} {}

Address::Address(
    ::google::protobuf::Arena* arena,
    const Address& from)
    : ::google::protobuf::Message(arena) {
  Address* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.port_ = from._impl_.port_;

  // @@protoc_insertion_point(copy_constructor:milvus.proto.common.Address)
}
inline PROTOBUF_NDEBUG_INLINE Address::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ip_(arena),
        _cached_size_{0} {}

inline void Address::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.port_ = {};
}
Address::~Address() {
  // @@protoc_insertion_point(destructor:milvus.proto.common.Address)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Address::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.ip_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Address::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.common.Address)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ip_.ClearToEmpty();
  _impl_.port_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Address::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> Address::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Address_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 port = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Address, _impl_.port_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Address, _impl_.port_)}},
    // string ip = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Address, _impl_.ip_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string ip = 1;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 port = 2;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\33\2\0\0\0\0\0\0"
    "milvus.proto.common.Address"
    "ip"
  }},
};

::uint8_t* Address::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.common.Address)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string ip = 1;
  if (!this->_internal_ip().empty()) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.Address.ip");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 port = 2;
  if (this->_internal_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.common.Address)
  return target;
}

::size_t Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.common.Address)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (!this->_internal_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip());
  }

  // int64 port = 2;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Address::_class_data_ = {
    Address::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Address::GetClassData() const {
  return &_class_data_;
}

void Address::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Address*>(&to_msg);
  auto& from = static_cast<const Address&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.common.Address)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (from._internal_port() != 0) {
    _this->_internal_set_port(from._internal_port());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Address::CopyFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.common.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Address::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Address::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Address::InternalSwap(Address* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
        swap(_impl_.port_, other->_impl_.port_);
}

::google::protobuf::Metadata Address::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[6]);
}
// ===================================================================

MsgBase_PropertiesEntry_DoNotUse::MsgBase_PropertiesEntry_DoNotUse() {}
MsgBase_PropertiesEntry_DoNotUse::MsgBase_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata MsgBase_PropertiesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[7]);
}
// ===================================================================

class MsgBase::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgBase>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgBase, _impl_._has_bits_);
  static const ::milvus::proto::common::ReplicateInfo& replicateinfo(const MsgBase* msg);
  static void set_has_replicateinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::milvus::proto::common::ReplicateInfo& MsgBase::_Internal::replicateinfo(const MsgBase* msg) {
  return *msg->_impl_.replicateinfo_;
}
MsgBase::MsgBase(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.common.MsgBase)
}
inline PROTOBUF_NDEBUG_INLINE MsgBase::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        properties_{visibility, arena, from.properties_} {}

MsgBase::MsgBase(
    ::google::protobuf::Arena* arena,
    const MsgBase& from)
    : ::google::protobuf::Message(arena) {
  MsgBase* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.replicateinfo_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::milvus::proto::common::ReplicateInfo>(arena, *from._impl_.replicateinfo_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, msgid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, msgid_),
           offsetof(Impl_, msg_type_) -
               offsetof(Impl_, msgid_) +
               sizeof(Impl_::msg_type_));

  // @@protoc_insertion_point(copy_constructor:milvus.proto.common.MsgBase)
}
inline PROTOBUF_NDEBUG_INLINE MsgBase::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        properties_{visibility, arena} {}

inline void MsgBase::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, replicateinfo_),
           0,
           offsetof(Impl_, msg_type_) -
               offsetof(Impl_, replicateinfo_) +
               sizeof(Impl_::msg_type_));
}
MsgBase::~MsgBase() {
  // @@protoc_insertion_point(destructor:milvus.proto.common.MsgBase)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MsgBase::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.replicateinfo_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MsgBase::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.common.MsgBase)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.replicateinfo_ != nullptr);
    _impl_.replicateinfo_->Clear();
  }
  ::memset(&_impl_.msgid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.msg_type_) -
      reinterpret_cast<char*>(&_impl_.msgid_)) + sizeof(_impl_.msg_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MsgBase::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 46, 2> MsgBase::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MsgBase, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MsgBase_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .milvus.proto.common.MsgType msg_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MsgBase, _impl_.msg_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MsgBase, _impl_.msg_type_)}},
    // int64 msgID = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MsgBase, _impl_.msgid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MsgBase, _impl_.msgid_)}},
    // uint64 timestamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MsgBase, _impl_.timestamp_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MsgBase, _impl_.timestamp_)}},
    // int64 sourceID = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MsgBase, _impl_.sourceid_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MsgBase, _impl_.sourceid_)}},
    // int64 targetID = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MsgBase, _impl_.targetid_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MsgBase, _impl_.targetid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .milvus.proto.common.ReplicateInfo replicateInfo = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 0, 1, PROTOBUF_FIELD_OFFSET(MsgBase, _impl_.replicateinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .milvus.proto.common.MsgType msg_type = 1;
    {PROTOBUF_FIELD_OFFSET(MsgBase, _impl_.msg_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 msgID = 2;
    {PROTOBUF_FIELD_OFFSET(MsgBase, _impl_.msgid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // uint64 timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(MsgBase, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // int64 sourceID = 4;
    {PROTOBUF_FIELD_OFFSET(MsgBase, _impl_.sourceid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 targetID = 5;
    {PROTOBUF_FIELD_OFFSET(MsgBase, _impl_.targetid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // map<string, string> properties = 6;
    {PROTOBUF_FIELD_OFFSET(MsgBase, _impl_.properties_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .milvus.proto.common.ReplicateInfo replicateInfo = 7;
    {PROTOBUF_FIELD_OFFSET(MsgBase, _impl_.replicateinfo_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(MsgBase()._impl_.properties_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetTable<::milvus::proto::common::ReplicateInfo>()},
  }}, {{
    "\33\0\0\0\0\0\12\0"
    "milvus.proto.common.MsgBase"
    "properties"
  }},
};

::uint8_t* MsgBase::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.common.MsgBase)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .milvus.proto.common.MsgType msg_type = 1;
  if (this->_internal_msg_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msg_type(), target);
  }

  // int64 msgID = 2;
  if (this->_internal_msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_msgid(), target);
  }

  // uint64 timestamp = 3;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_timestamp(), target);
  }

  // int64 sourceID = 4;
  if (this->_internal_sourceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_sourceid(), target);
  }

  // int64 targetID = 5;
  if (this->_internal_targetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_targetid(), target);
  }

  // map<string, string> properties = 6;
  if (!_internal_properties().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_properties();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.MsgBase.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.MsgBase.properties");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.MsgBase.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.MsgBase.properties");
      }
    }
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .milvus.proto.common.ReplicateInfo replicateInfo = 7;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::replicateinfo(this),
        _Internal::replicateinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.common.MsgBase)
  return target;
}

::size_t MsgBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.common.MsgBase)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> properties = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_properties_size());
  for (const auto& entry : _internal_properties()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // .milvus.proto.common.ReplicateInfo replicateInfo = 7;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.replicateinfo_);
  }

  // int64 msgID = 2;
  if (this->_internal_msgid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_msgid());
  }

  // uint64 timestamp = 3;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timestamp());
  }

  // int64 sourceID = 4;
  if (this->_internal_sourceid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_sourceid());
  }

  // int64 targetID = 5;
  if (this->_internal_targetid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_targetid());
  }

  // .milvus.proto.common.MsgType msg_type = 1;
  if (this->_internal_msg_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_msg_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MsgBase::_class_data_ = {
    MsgBase::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MsgBase::GetClassData() const {
  return &_class_data_;
}

void MsgBase::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MsgBase*>(&to_msg);
  auto& from = static_cast<const MsgBase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.common.MsgBase)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_replicateinfo()->::milvus::proto::common::ReplicateInfo::MergeFrom(
        from._internal_replicateinfo());
  }
  if (from._internal_msgid() != 0) {
    _this->_internal_set_msgid(from._internal_msgid());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_sourceid() != 0) {
    _this->_internal_set_sourceid(from._internal_sourceid());
  }
  if (from._internal_targetid() != 0) {
    _this->_internal_set_targetid(from._internal_targetid());
  }
  if (from._internal_msg_type() != 0) {
    _this->_internal_set_msg_type(from._internal_msg_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MsgBase::CopyFrom(const MsgBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.common.MsgBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MsgBase::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MsgBase::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MsgBase::InternalSwap(MsgBase* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgBase, _impl_.msg_type_)
      + sizeof(MsgBase::_impl_.msg_type_)
      - PROTOBUF_FIELD_OFFSET(MsgBase, _impl_.replicateinfo_)>(
          reinterpret_cast<char*>(&_impl_.replicateinfo_),
          reinterpret_cast<char*>(&other->_impl_.replicateinfo_));
}

::google::protobuf::Metadata MsgBase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[8]);
}
// ===================================================================

class ReplicateInfo::_Internal {
 public:
};

ReplicateInfo::ReplicateInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.common.ReplicateInfo)
}
ReplicateInfo::ReplicateInfo(
    ::google::protobuf::Arena* arena, const ReplicateInfo& from)
    : ReplicateInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ReplicateInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ReplicateInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, msgtimestamp_),
           0,
           offsetof(Impl_, isreplicate_) -
               offsetof(Impl_, msgtimestamp_) +
               sizeof(Impl_::isreplicate_));
}
ReplicateInfo::~ReplicateInfo() {
  // @@protoc_insertion_point(destructor:milvus.proto.common.ReplicateInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReplicateInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ReplicateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.common.ReplicateInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.msgtimestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.isreplicate_) -
      reinterpret_cast<char*>(&_impl_.msgtimestamp_)) + sizeof(_impl_.isreplicate_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReplicateInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ReplicateInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ReplicateInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 msgTimestamp = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReplicateInfo, _impl_.msgtimestamp_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicateInfo, _impl_.msgtimestamp_)}},
    // bool isReplicate = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReplicateInfo, _impl_.isreplicate_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ReplicateInfo, _impl_.isreplicate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool isReplicate = 1;
    {PROTOBUF_FIELD_OFFSET(ReplicateInfo, _impl_.isreplicate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint64 msgTimestamp = 2;
    {PROTOBUF_FIELD_OFFSET(ReplicateInfo, _impl_.msgtimestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ReplicateInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.common.ReplicateInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool isReplicate = 1;
  if (this->_internal_isreplicate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_isreplicate(), target);
  }

  // uint64 msgTimestamp = 2;
  if (this->_internal_msgtimestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_msgtimestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.common.ReplicateInfo)
  return target;
}

::size_t ReplicateInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.common.ReplicateInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 msgTimestamp = 2;
  if (this->_internal_msgtimestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_msgtimestamp());
  }

  // bool isReplicate = 1;
  if (this->_internal_isreplicate() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ReplicateInfo::_class_data_ = {
    ReplicateInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ReplicateInfo::GetClassData() const {
  return &_class_data_;
}

void ReplicateInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ReplicateInfo*>(&to_msg);
  auto& from = static_cast<const ReplicateInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.common.ReplicateInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_msgtimestamp() != 0) {
    _this->_internal_set_msgtimestamp(from._internal_msgtimestamp());
  }
  if (from._internal_isreplicate() != 0) {
    _this->_internal_set_isreplicate(from._internal_isreplicate());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReplicateInfo::CopyFrom(const ReplicateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.common.ReplicateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReplicateInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ReplicateInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ReplicateInfo::InternalSwap(ReplicateInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReplicateInfo, _impl_.isreplicate_)
      + sizeof(ReplicateInfo::_impl_.isreplicate_)
      - PROTOBUF_FIELD_OFFSET(ReplicateInfo, _impl_.msgtimestamp_)>(
          reinterpret_cast<char*>(&_impl_.msgtimestamp_),
          reinterpret_cast<char*>(&other->_impl_.msgtimestamp_));
}

::google::protobuf::Metadata ReplicateInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[9]);
}
// ===================================================================

class MsgHeader::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgHeader>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MsgHeader, _impl_._has_bits_);
  static const ::milvus::proto::common::MsgBase& base(const MsgHeader* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::milvus::proto::common::MsgBase& MsgHeader::_Internal::base(const MsgHeader* msg) {
  return *msg->_impl_.base_;
}
MsgHeader::MsgHeader(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.common.MsgHeader)
}
inline PROTOBUF_NDEBUG_INLINE MsgHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MsgHeader::MsgHeader(
    ::google::protobuf::Arena* arena,
    const MsgHeader& from)
    : ::google::protobuf::Message(arena) {
  MsgHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::milvus::proto::common::MsgBase>(arena, *from._impl_.base_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:milvus.proto.common.MsgHeader)
}
inline PROTOBUF_NDEBUG_INLINE MsgHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MsgHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.base_ = {};
}
MsgHeader::~MsgHeader() {
  // @@protoc_insertion_point(destructor:milvus.proto.common.MsgHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MsgHeader::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.base_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MsgHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.common.MsgHeader)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MsgHeader::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> MsgHeader::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MsgHeader, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MsgHeader_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .milvus.proto.common.MsgBase base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MsgHeader, _impl_.base_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .milvus.proto.common.MsgBase base = 1;
    {PROTOBUF_FIELD_OFFSET(MsgHeader, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::milvus::proto::common::MsgBase>()},
  }}, {{
  }},
};

::uint8_t* MsgHeader::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.common.MsgHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .milvus.proto.common.MsgBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.common.MsgHeader)
  return target;
}

::size_t MsgHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.common.MsgHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .milvus.proto.common.MsgBase base = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.base_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MsgHeader::_class_data_ = {
    MsgHeader::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MsgHeader::GetClassData() const {
  return &_class_data_;
}

void MsgHeader::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MsgHeader*>(&to_msg);
  auto& from = static_cast<const MsgHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.common.MsgHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_base()->::milvus::proto::common::MsgBase::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MsgHeader::CopyFrom(const MsgHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.common.MsgHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MsgHeader::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MsgHeader::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MsgHeader::InternalSwap(MsgHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.base_, other->_impl_.base_);
}

::google::protobuf::Metadata MsgHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[10]);
}
// ===================================================================

class DMLMsgHeader::_Internal {
 public:
  using HasBits = decltype(std::declval<DMLMsgHeader>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DMLMsgHeader, _impl_._has_bits_);
  static const ::milvus::proto::common::MsgBase& base(const DMLMsgHeader* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::milvus::proto::common::MsgBase& DMLMsgHeader::_Internal::base(const DMLMsgHeader* msg) {
  return *msg->_impl_.base_;
}
DMLMsgHeader::DMLMsgHeader(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.common.DMLMsgHeader)
}
inline PROTOBUF_NDEBUG_INLINE DMLMsgHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        shardname_(arena, from.shardname_) {}

DMLMsgHeader::DMLMsgHeader(
    ::google::protobuf::Arena* arena,
    const DMLMsgHeader& from)
    : ::google::protobuf::Message(arena) {
  DMLMsgHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::milvus::proto::common::MsgBase>(arena, *from._impl_.base_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:milvus.proto.common.DMLMsgHeader)
}
inline PROTOBUF_NDEBUG_INLINE DMLMsgHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        shardname_(arena) {}

inline void DMLMsgHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.base_ = {};
}
DMLMsgHeader::~DMLMsgHeader() {
  // @@protoc_insertion_point(destructor:milvus.proto.common.DMLMsgHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DMLMsgHeader::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.shardname_.Destroy();
  delete _impl_.base_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DMLMsgHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.common.DMLMsgHeader)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shardname_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DMLMsgHeader::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 50, 2> DMLMsgHeader::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DMLMsgHeader, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DMLMsgHeader_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string shardName = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DMLMsgHeader, _impl_.shardname_)}},
    // .milvus.proto.common.MsgBase base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DMLMsgHeader, _impl_.base_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .milvus.proto.common.MsgBase base = 1;
    {PROTOBUF_FIELD_OFFSET(DMLMsgHeader, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string shardName = 2;
    {PROTOBUF_FIELD_OFFSET(DMLMsgHeader, _impl_.shardname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::milvus::proto::common::MsgBase>()},
  }}, {{
    "\40\0\11\0\0\0\0\0"
    "milvus.proto.common.DMLMsgHeader"
    "shardName"
  }},
};

::uint8_t* DMLMsgHeader::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.common.DMLMsgHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .milvus.proto.common.MsgBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // string shardName = 2;
  if (!this->_internal_shardname().empty()) {
    const std::string& _s = this->_internal_shardname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.DMLMsgHeader.shardName");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.common.DMLMsgHeader)
  return target;
}

::size_t DMLMsgHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.common.DMLMsgHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string shardName = 2;
  if (!this->_internal_shardname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_shardname());
  }

  // .milvus.proto.common.MsgBase base = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.base_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DMLMsgHeader::_class_data_ = {
    DMLMsgHeader::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DMLMsgHeader::GetClassData() const {
  return &_class_data_;
}

void DMLMsgHeader::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DMLMsgHeader*>(&to_msg);
  auto& from = static_cast<const DMLMsgHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.common.DMLMsgHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_shardname().empty()) {
    _this->_internal_set_shardname(from._internal_shardname());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_base()->::milvus::proto::common::MsgBase::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DMLMsgHeader::CopyFrom(const DMLMsgHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.common.DMLMsgHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DMLMsgHeader::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DMLMsgHeader::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DMLMsgHeader::InternalSwap(DMLMsgHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.shardname_, &other->_impl_.shardname_, arena);
  swap(_impl_.base_, other->_impl_.base_);
}

::google::protobuf::Metadata DMLMsgHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[11]);
}
// ===================================================================

class PrivilegeExt::_Internal {
 public:
};

PrivilegeExt::PrivilegeExt(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.common.PrivilegeExt)
}
PrivilegeExt::PrivilegeExt(
    ::google::protobuf::Arena* arena, const PrivilegeExt& from)
    : PrivilegeExt(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PrivilegeExt::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PrivilegeExt::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, object_type_),
           0,
           offsetof(Impl_, object_name_indexs_) -
               offsetof(Impl_, object_type_) +
               sizeof(Impl_::object_name_indexs_));
}
PrivilegeExt::~PrivilegeExt() {
  // @@protoc_insertion_point(destructor:milvus.proto.common.PrivilegeExt)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PrivilegeExt::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PrivilegeExt::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.common.PrivilegeExt)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.object_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.object_name_indexs_) -
      reinterpret_cast<char*>(&_impl_.object_type_)) + sizeof(_impl_.object_name_indexs_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PrivilegeExt::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> PrivilegeExt::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PrivilegeExt_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 object_name_indexs = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PrivilegeExt, _impl_.object_name_indexs_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PrivilegeExt, _impl_.object_name_indexs_)}},
    // .milvus.proto.common.ObjectType object_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PrivilegeExt, _impl_.object_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PrivilegeExt, _impl_.object_type_)}},
    // .milvus.proto.common.ObjectPrivilege object_privilege = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PrivilegeExt, _impl_.object_privilege_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PrivilegeExt, _impl_.object_privilege_)}},
    // int32 object_name_index = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PrivilegeExt, _impl_.object_name_index_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PrivilegeExt, _impl_.object_name_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .milvus.proto.common.ObjectType object_type = 1;
    {PROTOBUF_FIELD_OFFSET(PrivilegeExt, _impl_.object_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .milvus.proto.common.ObjectPrivilege object_privilege = 2;
    {PROTOBUF_FIELD_OFFSET(PrivilegeExt, _impl_.object_privilege_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 object_name_index = 3;
    {PROTOBUF_FIELD_OFFSET(PrivilegeExt, _impl_.object_name_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 object_name_indexs = 4;
    {PROTOBUF_FIELD_OFFSET(PrivilegeExt, _impl_.object_name_indexs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PrivilegeExt::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.common.PrivilegeExt)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .milvus.proto.common.ObjectType object_type = 1;
  if (this->_internal_object_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_object_type(), target);
  }

  // .milvus.proto.common.ObjectPrivilege object_privilege = 2;
  if (this->_internal_object_privilege() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_object_privilege(), target);
  }

  // int32 object_name_index = 3;
  if (this->_internal_object_name_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_object_name_index(), target);
  }

  // int32 object_name_indexs = 4;
  if (this->_internal_object_name_indexs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_object_name_indexs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.common.PrivilegeExt)
  return target;
}

::size_t PrivilegeExt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.common.PrivilegeExt)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .milvus.proto.common.ObjectType object_type = 1;
  if (this->_internal_object_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_object_type());
  }

  // .milvus.proto.common.ObjectPrivilege object_privilege = 2;
  if (this->_internal_object_privilege() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_object_privilege());
  }

  // int32 object_name_index = 3;
  if (this->_internal_object_name_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_object_name_index());
  }

  // int32 object_name_indexs = 4;
  if (this->_internal_object_name_indexs() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_object_name_indexs());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PrivilegeExt::_class_data_ = {
    PrivilegeExt::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PrivilegeExt::GetClassData() const {
  return &_class_data_;
}

void PrivilegeExt::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PrivilegeExt*>(&to_msg);
  auto& from = static_cast<const PrivilegeExt&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.common.PrivilegeExt)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_object_type() != 0) {
    _this->_internal_set_object_type(from._internal_object_type());
  }
  if (from._internal_object_privilege() != 0) {
    _this->_internal_set_object_privilege(from._internal_object_privilege());
  }
  if (from._internal_object_name_index() != 0) {
    _this->_internal_set_object_name_index(from._internal_object_name_index());
  }
  if (from._internal_object_name_indexs() != 0) {
    _this->_internal_set_object_name_indexs(from._internal_object_name_indexs());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PrivilegeExt::CopyFrom(const PrivilegeExt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.common.PrivilegeExt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PrivilegeExt::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PrivilegeExt::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PrivilegeExt::InternalSwap(PrivilegeExt* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PrivilegeExt, _impl_.object_name_indexs_)
      + sizeof(PrivilegeExt::_impl_.object_name_indexs_)
      - PROTOBUF_FIELD_OFFSET(PrivilegeExt, _impl_.object_type_)>(
          reinterpret_cast<char*>(&_impl_.object_type_),
          reinterpret_cast<char*>(&other->_impl_.object_type_));
}

::google::protobuf::Metadata PrivilegeExt::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[12]);
}
// ===================================================================

class SegmentStats::_Internal {
 public:
};

SegmentStats::SegmentStats(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.common.SegmentStats)
}
SegmentStats::SegmentStats(
    ::google::protobuf::Arena* arena, const SegmentStats& from)
    : SegmentStats(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SegmentStats::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SegmentStats::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, segmentid_),
           0,
           offsetof(Impl_, numrows_) -
               offsetof(Impl_, segmentid_) +
               sizeof(Impl_::numrows_));
}
SegmentStats::~SegmentStats() {
  // @@protoc_insertion_point(destructor:milvus.proto.common.SegmentStats)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SegmentStats::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SegmentStats::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.common.SegmentStats)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.segmentid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.numrows_) -
      reinterpret_cast<char*>(&_impl_.segmentid_)) + sizeof(_impl_.numrows_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SegmentStats::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SegmentStats::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SegmentStats_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 NumRows = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SegmentStats, _impl_.numrows_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SegmentStats, _impl_.numrows_)}},
    // int64 SegmentID = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SegmentStats, _impl_.segmentid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SegmentStats, _impl_.segmentid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 SegmentID = 1;
    {PROTOBUF_FIELD_OFFSET(SegmentStats, _impl_.segmentid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 NumRows = 2;
    {PROTOBUF_FIELD_OFFSET(SegmentStats, _impl_.numrows_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SegmentStats::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.common.SegmentStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 SegmentID = 1;
  if (this->_internal_segmentid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_segmentid(), target);
  }

  // int64 NumRows = 2;
  if (this->_internal_numrows() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_numrows(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.common.SegmentStats)
  return target;
}

::size_t SegmentStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.common.SegmentStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 SegmentID = 1;
  if (this->_internal_segmentid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_segmentid());
  }

  // int64 NumRows = 2;
  if (this->_internal_numrows() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_numrows());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SegmentStats::_class_data_ = {
    SegmentStats::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SegmentStats::GetClassData() const {
  return &_class_data_;
}

void SegmentStats::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SegmentStats*>(&to_msg);
  auto& from = static_cast<const SegmentStats&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.common.SegmentStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_segmentid() != 0) {
    _this->_internal_set_segmentid(from._internal_segmentid());
  }
  if (from._internal_numrows() != 0) {
    _this->_internal_set_numrows(from._internal_numrows());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SegmentStats::CopyFrom(const SegmentStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.common.SegmentStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SegmentStats::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SegmentStats::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SegmentStats::InternalSwap(SegmentStats* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SegmentStats, _impl_.numrows_)
      + sizeof(SegmentStats::_impl_.numrows_)
      - PROTOBUF_FIELD_OFFSET(SegmentStats, _impl_.segmentid_)>(
          reinterpret_cast<char*>(&_impl_.segmentid_),
          reinterpret_cast<char*>(&other->_impl_.segmentid_));
}

::google::protobuf::Metadata SegmentStats::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[13]);
}
// ===================================================================

ClientInfo_ReservedEntry_DoNotUse::ClientInfo_ReservedEntry_DoNotUse() {}
ClientInfo_ReservedEntry_DoNotUse::ClientInfo_ReservedEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ClientInfo_ReservedEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[14]);
}
// ===================================================================

class ClientInfo::_Internal {
 public:
};

ClientInfo::ClientInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.common.ClientInfo)
}
inline PROTOBUF_NDEBUG_INLINE ClientInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : reserved_{visibility, arena, from.reserved_},
        sdk_type_(arena, from.sdk_type_),
        sdk_version_(arena, from.sdk_version_),
        local_time_(arena, from.local_time_),
        user_(arena, from.user_),
        host_(arena, from.host_),
        _cached_size_{0} {}

ClientInfo::ClientInfo(
    ::google::protobuf::Arena* arena,
    const ClientInfo& from)
    : ::google::protobuf::Message(arena) {
  ClientInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.common.ClientInfo)
}
inline PROTOBUF_NDEBUG_INLINE ClientInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : reserved_{visibility, arena},
        sdk_type_(arena),
        sdk_version_(arena),
        local_time_(arena),
        user_(arena),
        host_(arena),
        _cached_size_{0} {}

inline void ClientInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ClientInfo::~ClientInfo() {
  // @@protoc_insertion_point(destructor:milvus.proto.common.ClientInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ClientInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sdk_type_.Destroy();
  _impl_.sdk_version_.Destroy();
  _impl_.local_time_.Destroy();
  _impl_.user_.Destroy();
  _impl_.host_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ClientInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.common.ClientInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reserved_.Clear();
  _impl_.sdk_type_.ClearToEmpty();
  _impl_.sdk_version_.ClearToEmpty();
  _impl_.local_time_.ClearToEmpty();
  _impl_.user_.ClearToEmpty();
  _impl_.host_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ClientInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 84, 2> ClientInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ClientInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string sdk_type = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.sdk_type_)}},
    // string sdk_version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.sdk_version_)}},
    // string local_time = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.local_time_)}},
    // string user = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.user_)}},
    // string host = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.host_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string sdk_type = 1;
    {PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.sdk_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sdk_version = 2;
    {PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.sdk_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string local_time = 3;
    {PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.local_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user = 4;
    {PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.user_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string host = 5;
    {PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.host_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> reserved = 6;
    {PROTOBUF_FIELD_OFFSET(ClientInfo, _impl_.reserved_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ClientInfo()._impl_.reserved_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\36\10\13\12\4\4\10\0"
    "milvus.proto.common.ClientInfo"
    "sdk_type"
    "sdk_version"
    "local_time"
    "user"
    "host"
    "reserved"
  }},
};

::uint8_t* ClientInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.common.ClientInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string sdk_type = 1;
  if (!this->_internal_sdk_type().empty()) {
    const std::string& _s = this->_internal_sdk_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ClientInfo.sdk_type");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string sdk_version = 2;
  if (!this->_internal_sdk_version().empty()) {
    const std::string& _s = this->_internal_sdk_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ClientInfo.sdk_version");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string local_time = 3;
  if (!this->_internal_local_time().empty()) {
    const std::string& _s = this->_internal_local_time();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ClientInfo.local_time");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string user = 4;
  if (!this->_internal_user().empty()) {
    const std::string& _s = this->_internal_user();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ClientInfo.user");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string host = 5;
  if (!this->_internal_host().empty()) {
    const std::string& _s = this->_internal_host();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ClientInfo.host");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // map<string, string> reserved = 6;
  if (!_internal_reserved().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_reserved();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ClientInfo.reserved");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ClientInfo.reserved");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ClientInfo.reserved");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ClientInfo.reserved");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.common.ClientInfo)
  return target;
}

::size_t ClientInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.common.ClientInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> reserved = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_reserved_size());
  for (const auto& entry : _internal_reserved()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string sdk_type = 1;
  if (!this->_internal_sdk_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sdk_type());
  }

  // string sdk_version = 2;
  if (!this->_internal_sdk_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sdk_version());
  }

  // string local_time = 3;
  if (!this->_internal_local_time().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_local_time());
  }

  // string user = 4;
  if (!this->_internal_user().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user());
  }

  // string host = 5;
  if (!this->_internal_host().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_host());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ClientInfo::_class_data_ = {
    ClientInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ClientInfo::GetClassData() const {
  return &_class_data_;
}

void ClientInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ClientInfo*>(&to_msg);
  auto& from = static_cast<const ClientInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.common.ClientInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.reserved_.MergeFrom(from._impl_.reserved_);
  if (!from._internal_sdk_type().empty()) {
    _this->_internal_set_sdk_type(from._internal_sdk_type());
  }
  if (!from._internal_sdk_version().empty()) {
    _this->_internal_set_sdk_version(from._internal_sdk_version());
  }
  if (!from._internal_local_time().empty()) {
    _this->_internal_set_local_time(from._internal_local_time());
  }
  if (!from._internal_user().empty()) {
    _this->_internal_set_user(from._internal_user());
  }
  if (!from._internal_host().empty()) {
    _this->_internal_set_host(from._internal_host());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientInfo::CopyFrom(const ClientInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.common.ClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ClientInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ClientInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ClientInfo::InternalSwap(ClientInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.reserved_.InternalSwap(&other->_impl_.reserved_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sdk_type_, &other->_impl_.sdk_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sdk_version_, &other->_impl_.sdk_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.local_time_, &other->_impl_.local_time_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_, &other->_impl_.user_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_, &other->_impl_.host_, arena);
}

::google::protobuf::Metadata ClientInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[15]);
}
// ===================================================================

ServerInfo_ReservedEntry_DoNotUse::ServerInfo_ReservedEntry_DoNotUse() {}
ServerInfo_ReservedEntry_DoNotUse::ServerInfo_ReservedEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata ServerInfo_ReservedEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[16]);
}
// ===================================================================

class ServerInfo::_Internal {
 public:
};

ServerInfo::ServerInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.common.ServerInfo)
}
inline PROTOBUF_NDEBUG_INLINE ServerInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : reserved_{visibility, arena, from.reserved_},
        build_tags_(arena, from.build_tags_),
        build_time_(arena, from.build_time_),
        git_commit_(arena, from.git_commit_),
        go_version_(arena, from.go_version_),
        deploy_mode_(arena, from.deploy_mode_),
        _cached_size_{0} {}

ServerInfo::ServerInfo(
    ::google::protobuf::Arena* arena,
    const ServerInfo& from)
    : ::google::protobuf::Message(arena) {
  ServerInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.common.ServerInfo)
}
inline PROTOBUF_NDEBUG_INLINE ServerInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : reserved_{visibility, arena},
        build_tags_(arena),
        build_time_(arena),
        git_commit_(arena),
        go_version_(arena),
        deploy_mode_(arena),
        _cached_size_{0} {}

inline void ServerInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ServerInfo::~ServerInfo() {
  // @@protoc_insertion_point(destructor:milvus.proto.common.ServerInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServerInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.build_tags_.Destroy();
  _impl_.build_time_.Destroy();
  _impl_.git_commit_.Destroy();
  _impl_.go_version_.Destroy();
  _impl_.deploy_mode_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.common.ServerInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reserved_.Clear();
  _impl_.build_tags_.ClearToEmpty();
  _impl_.build_time_.ClearToEmpty();
  _impl_.git_commit_.ClearToEmpty();
  _impl_.go_version_.ClearToEmpty();
  _impl_.deploy_mode_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServerInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 98, 2> ServerInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ServerInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string build_tags = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.build_tags_)}},
    // string build_time = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.build_time_)}},
    // string git_commit = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.git_commit_)}},
    // string go_version = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.go_version_)}},
    // string deploy_mode = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.deploy_mode_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string build_tags = 1;
    {PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.build_tags_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string build_time = 2;
    {PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.build_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string git_commit = 3;
    {PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.git_commit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string go_version = 4;
    {PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.go_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string deploy_mode = 5;
    {PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.deploy_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> reserved = 6;
    {PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.reserved_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ServerInfo()._impl_.reserved_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\36\12\12\12\12\13\10\0"
    "milvus.proto.common.ServerInfo"
    "build_tags"
    "build_time"
    "git_commit"
    "go_version"
    "deploy_mode"
    "reserved"
  }},
};

::uint8_t* ServerInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.common.ServerInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string build_tags = 1;
  if (!this->_internal_build_tags().empty()) {
    const std::string& _s = this->_internal_build_tags();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ServerInfo.build_tags");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string build_time = 2;
  if (!this->_internal_build_time().empty()) {
    const std::string& _s = this->_internal_build_time();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ServerInfo.build_time");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string git_commit = 3;
  if (!this->_internal_git_commit().empty()) {
    const std::string& _s = this->_internal_git_commit();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ServerInfo.git_commit");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string go_version = 4;
  if (!this->_internal_go_version().empty()) {
    const std::string& _s = this->_internal_go_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ServerInfo.go_version");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string deploy_mode = 5;
  if (!this->_internal_deploy_mode().empty()) {
    const std::string& _s = this->_internal_deploy_mode();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ServerInfo.deploy_mode");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // map<string, string> reserved = 6;
  if (!_internal_reserved().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_reserved();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ServerInfo.reserved");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ServerInfo.reserved");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ServerInfo.reserved");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.common.ServerInfo.reserved");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.common.ServerInfo)
  return target;
}

::size_t ServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.common.ServerInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> reserved = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_reserved_size());
  for (const auto& entry : _internal_reserved()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string build_tags = 1;
  if (!this->_internal_build_tags().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_build_tags());
  }

  // string build_time = 2;
  if (!this->_internal_build_time().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_build_time());
  }

  // string git_commit = 3;
  if (!this->_internal_git_commit().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_git_commit());
  }

  // string go_version = 4;
  if (!this->_internal_go_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_go_version());
  }

  // string deploy_mode = 5;
  if (!this->_internal_deploy_mode().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_deploy_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ServerInfo::_class_data_ = {
    ServerInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ServerInfo::GetClassData() const {
  return &_class_data_;
}

void ServerInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ServerInfo*>(&to_msg);
  auto& from = static_cast<const ServerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.common.ServerInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.reserved_.MergeFrom(from._impl_.reserved_);
  if (!from._internal_build_tags().empty()) {
    _this->_internal_set_build_tags(from._internal_build_tags());
  }
  if (!from._internal_build_time().empty()) {
    _this->_internal_set_build_time(from._internal_build_time());
  }
  if (!from._internal_git_commit().empty()) {
    _this->_internal_set_git_commit(from._internal_git_commit());
  }
  if (!from._internal_go_version().empty()) {
    _this->_internal_set_go_version(from._internal_go_version());
  }
  if (!from._internal_deploy_mode().empty()) {
    _this->_internal_set_deploy_mode(from._internal_deploy_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerInfo::CopyFrom(const ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.common.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServerInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ServerInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ServerInfo::InternalSwap(ServerInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.reserved_.InternalSwap(&other->_impl_.reserved_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.build_tags_, &other->_impl_.build_tags_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.build_time_, &other->_impl_.build_time_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.git_commit_, &other->_impl_.git_commit_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.go_version_, &other->_impl_.go_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.deploy_mode_, &other->_impl_.deploy_mode_, arena);
}

::google::protobuf::Metadata ServerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[17]);
}
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::milvus::proto::common::PrivilegeExt >, 11, false>
  privilege_ext_obj(kPrivilegeExtObjFieldNumber, ::milvus::proto::common::PrivilegeExt::default_instance(), nullptr);
// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace proto
}  // namespace milvus
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
