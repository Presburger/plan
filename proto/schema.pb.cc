// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema.proto

#include "schema.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace milvus {
namespace proto {
namespace schema {

inline constexpr ValueField::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ValueField::ValueField(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ValueFieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValueFieldDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValueFieldDefaultTypeInternal() {}
  union {
    ValueField _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValueFieldDefaultTypeInternal _ValueField_default_instance_;

inline constexpr StringArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StringArray::StringArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StringArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringArrayDefaultTypeInternal() {}
  union {
    StringArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringArrayDefaultTypeInternal _StringArray_default_instance_;

inline constexpr ScalarClusteringInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : field_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ScalarClusteringInfo::ScalarClusteringInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ScalarClusteringInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarClusteringInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarClusteringInfoDefaultTypeInternal() {}
  union {
    ScalarClusteringInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarClusteringInfoDefaultTypeInternal _ScalarClusteringInfo_default_instance_;

inline constexpr LongArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _data_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LongArray::LongArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LongArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LongArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LongArrayDefaultTypeInternal() {}
  union {
    LongArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LongArrayDefaultTypeInternal _LongArray_default_instance_;

inline constexpr JSONArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JSONArray::JSONArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct JSONArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JSONArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JSONArrayDefaultTypeInternal() {}
  union {
    JSONArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JSONArrayDefaultTypeInternal _JSONArray_default_instance_;

inline constexpr IntArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _data_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IntArray::IntArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IntArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IntArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IntArrayDefaultTypeInternal() {}
  union {
    IntArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IntArrayDefaultTypeInternal _IntArray_default_instance_;

inline constexpr FloatArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FloatArray::FloatArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FloatArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FloatArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FloatArrayDefaultTypeInternal() {}
  union {
    FloatArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FloatArrayDefaultTypeInternal _FloatArray_default_instance_;

inline constexpr DoubleArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DoubleArray::DoubleArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DoubleArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DoubleArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DoubleArrayDefaultTypeInternal() {}
  union {
    DoubleArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DoubleArrayDefaultTypeInternal _DoubleArray_default_instance_;

inline constexpr BytesArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BytesArray::BytesArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BytesArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BytesArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BytesArrayDefaultTypeInternal() {}
  union {
    BytesArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BytesArrayDefaultTypeInternal _BytesArray_default_instance_;

inline constexpr BoolArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BoolArray::BoolArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BoolArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoolArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoolArrayDefaultTypeInternal() {}
  union {
    BoolArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoolArrayDefaultTypeInternal _BoolArray_default_instance_;

inline constexpr VectorField::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dim_{::int64_t{0}},
        data_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR VectorField::VectorField(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VectorFieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorFieldDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorFieldDefaultTypeInternal() {}
  union {
    VectorField _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorFieldDefaultTypeInternal _VectorField_default_instance_;

inline constexpr IDs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_field_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR IDs::IDs(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IDsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IDsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IDsDefaultTypeInternal() {}
  union {
    IDs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IDsDefaultTypeInternal _IDs_default_instance_;

inline constexpr FieldSchema::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_params_{},
        index_params_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        default_value_{nullptr},
        fieldid_{::int64_t{0}},
        data_type_{static_cast< ::milvus::proto::schema::DataType >(0)},
        state_{static_cast< ::milvus::proto::schema::FieldState >(0)},
        is_primary_key_{false},
        autoid_{false},
        is_dynamic_{false},
        is_partition_key_{false},
        element_type_{static_cast< ::milvus::proto::schema::DataType >(0)},
        is_clustering_key_{false} {}

template <typename>
PROTOBUF_CONSTEXPR FieldSchema::FieldSchema(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FieldSchemaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FieldSchemaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FieldSchemaDefaultTypeInternal() {}
  union {
    FieldSchema _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FieldSchemaDefaultTypeInternal _FieldSchema_default_instance_;

inline constexpr ArrayArray::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        element_type_{static_cast< ::milvus::proto::schema::DataType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ArrayArray::ArrayArray(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ArrayArrayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArrayArrayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArrayArrayDefaultTypeInternal() {}
  union {
    ArrayArray _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArrayArrayDefaultTypeInternal _ArrayArray_default_instance_;

inline constexpr ScalarField::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ScalarField::ScalarField(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ScalarFieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScalarFieldDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScalarFieldDefaultTypeInternal() {}
  union {
    ScalarField _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScalarFieldDefaultTypeInternal _ScalarField_default_instance_;

inline constexpr VectorClusteringInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        field_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        centroid_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VectorClusteringInfo::VectorClusteringInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VectorClusteringInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorClusteringInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorClusteringInfoDefaultTypeInternal() {}
  union {
    VectorClusteringInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorClusteringInfoDefaultTypeInternal _VectorClusteringInfo_default_instance_;

inline constexpr FieldData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : field_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::milvus::proto::schema::DataType >(0)},
        is_dynamic_{false},
        field_id_{::int64_t{0}},
        field_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR FieldData::FieldData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FieldDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FieldDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FieldDataDefaultTypeInternal() {}
  union {
    FieldData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FieldDataDefaultTypeInternal _FieldData_default_instance_;

inline constexpr CollectionSchema::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : fields_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        autoid_{false},
        enable_dynamic_field_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CollectionSchema::CollectionSchema(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollectionSchemaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollectionSchemaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollectionSchemaDefaultTypeInternal() {}
  union {
    CollectionSchema _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollectionSchemaDefaultTypeInternal _CollectionSchema_default_instance_;

inline constexpr SearchResultData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        fields_data_{},
        scores_{},
        topks_{},
        _topks_cached_byte_size_{0},
        output_fields_{},
        ids_{nullptr},
        group_by_field_value_{nullptr},
        num_queries_{::int64_t{0}},
        top_k_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR SearchResultData::SearchResultData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SearchResultDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchResultDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchResultDataDefaultTypeInternal() {}
  union {
    SearchResultData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchResultDataDefaultTypeInternal _SearchResultData_default_instance_;

inline constexpr ClusteringInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : vector_clustering_infos_{},
        scalar_clustering_infos_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClusteringInfo::ClusteringInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ClusteringInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClusteringInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClusteringInfoDefaultTypeInternal() {}
  union {
    ClusteringInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClusteringInfoDefaultTypeInternal _ClusteringInfo_default_instance_;
}  // namespace schema
}  // namespace proto
}  // namespace milvus
static ::_pb::Metadata file_level_metadata_schema_2eproto[20];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_schema_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_schema_2eproto = nullptr;
const ::uint32_t TableStruct_schema_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _impl_.fieldid_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _impl_.is_primary_key_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _impl_.data_type_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _impl_.type_params_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _impl_.index_params_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _impl_.autoid_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _impl_.element_type_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _impl_.default_value_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _impl_.is_dynamic_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _impl_.is_partition_key_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldSchema, _impl_.is_clustering_key_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::CollectionSchema, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::CollectionSchema, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::CollectionSchema, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::CollectionSchema, _impl_.autoid_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::CollectionSchema, _impl_.fields_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::CollectionSchema, _impl_.enable_dynamic_field_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::BoolArray, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::BoolArray, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::IntArray, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::IntArray, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::LongArray, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::LongArray, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FloatArray, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FloatArray, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::DoubleArray, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::DoubleArray, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::BytesArray, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::BytesArray, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::StringArray, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::StringArray, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ArrayArray, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ArrayArray, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ArrayArray, _impl_.element_type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::JSONArray, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::JSONArray, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ValueField, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ValueField, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ValueField, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ScalarField, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ScalarField, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ScalarField, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::VectorField, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::VectorField, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::VectorField, _impl_.dim_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::VectorField, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldData, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldData, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldData, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldData, _impl_.field_name_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldData, _impl_.field_id_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldData, _impl_.is_dynamic_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldData, _impl_.field_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::IDs, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::IDs, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::IDs, _impl_.id_field_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::SearchResultData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::SearchResultData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::SearchResultData, _impl_.num_queries_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::SearchResultData, _impl_.top_k_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::SearchResultData, _impl_.fields_data_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::SearchResultData, _impl_.scores_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::SearchResultData, _impl_.ids_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::SearchResultData, _impl_.topks_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::SearchResultData, _impl_.output_fields_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::SearchResultData, _impl_.group_by_field_value_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::VectorClusteringInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::VectorClusteringInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::VectorClusteringInfo, _impl_.field_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::VectorClusteringInfo, _impl_.centroid_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ScalarClusteringInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ScalarClusteringInfo, _impl_.field_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ClusteringInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ClusteringInfo, _impl_.vector_clustering_infos_),
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ClusteringInfo, _impl_.scalar_clustering_infos_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 22, -1, sizeof(::milvus::proto::schema::FieldSchema)},
        {36, -1, -1, sizeof(::milvus::proto::schema::CollectionSchema)},
        {49, -1, -1, sizeof(::milvus::proto::schema::BoolArray)},
        {58, -1, -1, sizeof(::milvus::proto::schema::IntArray)},
        {67, -1, -1, sizeof(::milvus::proto::schema::LongArray)},
        {76, -1, -1, sizeof(::milvus::proto::schema::FloatArray)},
        {85, -1, -1, sizeof(::milvus::proto::schema::DoubleArray)},
        {94, -1, -1, sizeof(::milvus::proto::schema::BytesArray)},
        {103, -1, -1, sizeof(::milvus::proto::schema::StringArray)},
        {112, -1, -1, sizeof(::milvus::proto::schema::ArrayArray)},
        {122, -1, -1, sizeof(::milvus::proto::schema::JSONArray)},
        {131, -1, -1, sizeof(::milvus::proto::schema::ValueField)},
        {147, -1, -1, sizeof(::milvus::proto::schema::ScalarField)},
        {165, -1, -1, sizeof(::milvus::proto::schema::VectorField)},
        {179, -1, -1, sizeof(::milvus::proto::schema::FieldData)},
        {194, -1, -1, sizeof(::milvus::proto::schema::IDs)},
        {205, 221, -1, sizeof(::milvus::proto::schema::SearchResultData)},
        {229, 239, -1, sizeof(::milvus::proto::schema::VectorClusteringInfo)},
        {241, -1, -1, sizeof(::milvus::proto::schema::ScalarClusteringInfo)},
        {250, -1, -1, sizeof(::milvus::proto::schema::ClusteringInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::milvus::proto::schema::_FieldSchema_default_instance_._instance,
    &::milvus::proto::schema::_CollectionSchema_default_instance_._instance,
    &::milvus::proto::schema::_BoolArray_default_instance_._instance,
    &::milvus::proto::schema::_IntArray_default_instance_._instance,
    &::milvus::proto::schema::_LongArray_default_instance_._instance,
    &::milvus::proto::schema::_FloatArray_default_instance_._instance,
    &::milvus::proto::schema::_DoubleArray_default_instance_._instance,
    &::milvus::proto::schema::_BytesArray_default_instance_._instance,
    &::milvus::proto::schema::_StringArray_default_instance_._instance,
    &::milvus::proto::schema::_ArrayArray_default_instance_._instance,
    &::milvus::proto::schema::_JSONArray_default_instance_._instance,
    &::milvus::proto::schema::_ValueField_default_instance_._instance,
    &::milvus::proto::schema::_ScalarField_default_instance_._instance,
    &::milvus::proto::schema::_VectorField_default_instance_._instance,
    &::milvus::proto::schema::_FieldData_default_instance_._instance,
    &::milvus::proto::schema::_IDs_default_instance_._instance,
    &::milvus::proto::schema::_SearchResultData_default_instance_._instance,
    &::milvus::proto::schema::_VectorClusteringInfo_default_instance_._instance,
    &::milvus::proto::schema::_ScalarClusteringInfo_default_instance_._instance,
    &::milvus::proto::schema::_ClusteringInfo_default_instance_._instance,
};
const char descriptor_table_protodef_schema_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014schema.proto\022\023milvus.proto.schema\032\014com"
    "mon.proto\032 google/protobuf/descriptor.pr"
    "oto\"\362\003\n\013FieldSchema\022\017\n\007fieldID\030\001 \001(\003\022\014\n\004"
    "name\030\002 \001(\t\022\026\n\016is_primary_key\030\003 \001(\010\022\023\n\013de"
    "scription\030\004 \001(\t\0220\n\tdata_type\030\005 \001(\0162\035.mil"
    "vus.proto.schema.DataType\0226\n\013type_params"
    "\030\006 \003(\0132!.milvus.proto.common.KeyValuePai"
    "r\0227\n\014index_params\030\007 \003(\0132!.milvus.proto.c"
    "ommon.KeyValuePair\022\016\n\006autoID\030\010 \001(\010\022.\n\005st"
    "ate\030\t \001(\0162\037.milvus.proto.schema.FieldSta"
    "te\0223\n\014element_type\030\n \001(\0162\035.milvus.proto."
    "schema.DataType\0226\n\rdefault_value\030\013 \001(\0132\037"
    ".milvus.proto.schema.ValueField\022\022\n\nis_dy"
    "namic\030\014 \001(\010\022\030\n\020is_partition_key\030\r \001(\010\022\031\n"
    "\021is_clustering_key\030\016 \001(\010\"\231\001\n\020CollectionS"
    "chema\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 \001(\t"
    "\022\022\n\006autoID\030\003 \001(\010B\002\030\001\0220\n\006fields\030\004 \003(\0132 .m"
    "ilvus.proto.schema.FieldSchema\022\034\n\024enable"
    "_dynamic_field\030\005 \001(\010\"\031\n\tBoolArray\022\014\n\004dat"
    "a\030\001 \003(\010\"\030\n\010IntArray\022\014\n\004data\030\001 \003(\005\"\031\n\tLon"
    "gArray\022\014\n\004data\030\001 \003(\003\"\032\n\nFloatArray\022\014\n\004da"
    "ta\030\001 \003(\002\"\033\n\013DoubleArray\022\014\n\004data\030\001 \003(\001\"\032\n"
    "\nBytesArray\022\014\n\004data\030\001 \003(\014\"\033\n\013StringArray"
    "\022\014\n\004data\030\001 \003(\t\"q\n\nArrayArray\022.\n\004data\030\001 \003"
    "(\0132 .milvus.proto.schema.ScalarField\0223\n\014"
    "element_type\030\002 \001(\0162\035.milvus.proto.schema"
    ".DataType\"\031\n\tJSONArray\022\014\n\004data\030\001 \003(\014\"\254\001\n"
    "\nValueField\022\023\n\tbool_data\030\001 \001(\010H\000\022\022\n\010int_"
    "data\030\002 \001(\005H\000\022\023\n\tlong_data\030\003 \001(\003H\000\022\024\n\nflo"
    "at_data\030\004 \001(\002H\000\022\025\n\013double_data\030\005 \001(\001H\000\022\025"
    "\n\013string_data\030\006 \001(\tH\000\022\024\n\nbytes_data\030\007 \001("
    "\014H\000B\006\n\004data\"\376\003\n\013ScalarField\0223\n\tbool_data"
    "\030\001 \001(\0132\036.milvus.proto.schema.BoolArrayH\000"
    "\0221\n\010int_data\030\002 \001(\0132\035.milvus.proto.schema"
    ".IntArrayH\000\0223\n\tlong_data\030\003 \001(\0132\036.milvus."
    "proto.schema.LongArrayH\000\0225\n\nfloat_data\030\004"
    " \001(\0132\037.milvus.proto.schema.FloatArrayH\000\022"
    "7\n\013double_data\030\005 \001(\0132 .milvus.proto.sche"
    "ma.DoubleArrayH\000\0227\n\013string_data\030\006 \001(\0132 ."
    "milvus.proto.schema.StringArrayH\000\0225\n\nbyt"
    "es_data\030\007 \001(\0132\037.milvus.proto.schema.Byte"
    "sArrayH\000\0225\n\narray_data\030\010 \001(\0132\037.milvus.pr"
    "oto.schema.ArrayArrayH\000\0223\n\tjson_data\030\t \001"
    "(\0132\036.milvus.proto.schema.JSONArrayH\000B\006\n\004"
    "data\"\251\001\n\013VectorField\022\013\n\003dim\030\001 \001(\003\0227\n\014flo"
    "at_vector\030\002 \001(\0132\037.milvus.proto.schema.Fl"
    "oatArrayH\000\022\027\n\rbinary_vector\030\003 \001(\014H\000\022\030\n\016f"
    "loat16_vector\030\004 \001(\014H\000\022\031\n\017bfloat16_vector"
    "\030\005 \001(\014H\000B\006\n\004data\"\345\001\n\tFieldData\022+\n\004type\030\001"
    " \001(\0162\035.milvus.proto.schema.DataType\022\022\n\nf"
    "ield_name\030\002 \001(\t\0223\n\007scalars\030\003 \001(\0132 .milvu"
    "s.proto.schema.ScalarFieldH\000\0223\n\007vectors\030"
    "\004 \001(\0132 .milvus.proto.schema.VectorFieldH"
    "\000\022\020\n\010field_id\030\005 \001(\003\022\022\n\nis_dynamic\030\006 \001(\010B"
    "\007\n\005field\"w\n\003IDs\0220\n\006int_id\030\001 \001(\0132\036.milvus"
    ".proto.schema.LongArrayH\000\0222\n\006str_id\030\002 \001("
    "\0132 .milvus.proto.schema.StringArrayH\000B\n\n"
    "\010id_field\"\206\002\n\020SearchResultData\022\023\n\013num_qu"
    "eries\030\001 \001(\003\022\r\n\005top_k\030\002 \001(\003\0223\n\013fields_dat"
    "a\030\003 \003(\0132\036.milvus.proto.schema.FieldData\022"
    "\016\n\006scores\030\004 \003(\002\022%\n\003ids\030\005 \001(\0132\030.milvus.pr"
    "oto.schema.IDs\022\r\n\005topks\030\006 \003(\003\022\025\n\routput_"
    "fields\030\007 \003(\t\022<\n\024group_by_field_value\030\010 \001"
    "(\0132\036.milvus.proto.schema.FieldData\"Y\n\024Ve"
    "ctorClusteringInfo\022\r\n\005field\030\001 \001(\t\0222\n\010cen"
    "troid\030\002 \001(\0132 .milvus.proto.schema.Vector"
    "Field\"%\n\024ScalarClusteringInfo\022\r\n\005field\030\001"
    " \001(\t\"\250\001\n\016ClusteringInfo\022J\n\027vector_cluste"
    "ring_infos\030\001 \003(\0132).milvus.proto.schema.V"
    "ectorClusteringInfo\022J\n\027scalar_clustering"
    "_infos\030\002 \003(\0132).milvus.proto.schema.Scala"
    "rClusteringInfo*\330\001\n\010DataType\022\010\n\004None\020\000\022\010"
    "\n\004Bool\020\001\022\010\n\004Int8\020\002\022\t\n\005Int16\020\003\022\t\n\005Int32\020\004"
    "\022\t\n\005Int64\020\005\022\t\n\005Float\020\n\022\n\n\006Double\020\013\022\n\n\006St"
    "ring\020\024\022\013\n\007VarChar\020\025\022\t\n\005Array\020\026\022\010\n\004JSON\020\027"
    "\022\020\n\014BinaryVector\020d\022\017\n\013FloatVector\020e\022\021\n\rF"
    "loat16Vector\020f\022\022\n\016BFloat16Vector\020g*V\n\nFi"
    "eldState\022\020\n\014FieldCreated\020\000\022\021\n\rFieldCreat"
    "ing\020\001\022\021\n\rFieldDropping\020\002\022\020\n\014FieldDropped"
    "\020\003b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_schema_2eproto_deps[2] =
    {
        &::descriptor_table_common_2eproto,
        &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::absl::once_flag descriptor_table_schema_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_schema_2eproto = {
    false,
    false,
    3170,
    descriptor_table_protodef_schema_2eproto,
    "schema.proto",
    &descriptor_table_schema_2eproto_once,
    descriptor_table_schema_2eproto_deps,
    2,
    20,
    schemas,
    file_default_instances,
    TableStruct_schema_2eproto::offsets,
    file_level_metadata_schema_2eproto,
    file_level_enum_descriptors_schema_2eproto,
    file_level_service_descriptors_schema_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_schema_2eproto_getter() {
  return &descriptor_table_schema_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_schema_2eproto(&descriptor_table_schema_2eproto);
namespace milvus {
namespace proto {
namespace schema {
const ::google::protobuf::EnumDescriptor* DataType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_schema_2eproto);
  return file_level_enum_descriptors_schema_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t DataType_internal_data_[] = {
    393216u, 128u, 245808u, 0u, 3221225472u, 3u, };
bool DataType_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, DataType_internal_data_);
}
const ::google::protobuf::EnumDescriptor* FieldState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_schema_2eproto);
  return file_level_enum_descriptors_schema_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t FieldState_internal_data_[] = {
    262144u, 0u, };
bool FieldState_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class FieldSchema::_Internal {
 public:
  using HasBits = decltype(std::declval<FieldSchema>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_._has_bits_);
  static const ::milvus::proto::schema::ValueField& default_value(const FieldSchema* msg);
  static void set_has_default_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::milvus::proto::schema::ValueField& FieldSchema::_Internal::default_value(const FieldSchema* msg) {
  return *msg->_impl_.default_value_;
}
void FieldSchema::clear_type_params() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_params_.Clear();
}
void FieldSchema::clear_index_params() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.index_params_.Clear();
}
FieldSchema::FieldSchema(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.FieldSchema)
}
inline PROTOBUF_NDEBUG_INLINE FieldSchema::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        type_params_{visibility, arena, from.type_params_},
        index_params_{visibility, arena, from.index_params_},
        name_(arena, from.name_),
        description_(arena, from.description_) {}

FieldSchema::FieldSchema(
    ::google::protobuf::Arena* arena,
    const FieldSchema& from)
    : ::google::protobuf::Message(arena) {
  FieldSchema* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.default_value_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::milvus::proto::schema::ValueField>(arena, *from._impl_.default_value_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fieldid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, fieldid_),
           offsetof(Impl_, is_clustering_key_) -
               offsetof(Impl_, fieldid_) +
               sizeof(Impl_::is_clustering_key_));

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.FieldSchema)
}
inline PROTOBUF_NDEBUG_INLINE FieldSchema::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_params_{visibility, arena},
        index_params_{visibility, arena},
        name_(arena),
        description_(arena) {}

inline void FieldSchema::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, default_value_),
           0,
           offsetof(Impl_, is_clustering_key_) -
               offsetof(Impl_, default_value_) +
               sizeof(Impl_::is_clustering_key_));
}
FieldSchema::~FieldSchema() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.FieldSchema)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FieldSchema::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  delete _impl_.default_value_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FieldSchema::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.FieldSchema)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_params_.Clear();
  _impl_.index_params_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.default_value_ != nullptr);
    _impl_.default_value_->Clear();
  }
  ::memset(&_impl_.fieldid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_clustering_key_) -
      reinterpret_cast<char*>(&_impl_.fieldid_)) + sizeof(_impl_.is_clustering_key_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FieldSchema::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 3, 63, 2> FieldSchema::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FieldSchema_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 fieldID = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FieldSchema, _impl_.fieldid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.fieldid_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.name_)}},
    // bool is_primary_key = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FieldSchema, _impl_.is_primary_key_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.is_primary_key_)}},
    // string description = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.description_)}},
    // .milvus.proto.schema.DataType data_type = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FieldSchema, _impl_.data_type_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.data_type_)}},
    // repeated .milvus.proto.common.KeyValuePair type_params = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.type_params_)}},
    // repeated .milvus.proto.common.KeyValuePair index_params = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 1, PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.index_params_)}},
    // bool autoID = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FieldSchema, _impl_.autoid_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.autoid_)}},
    // .milvus.proto.schema.FieldState state = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FieldSchema, _impl_.state_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.state_)}},
    // .milvus.proto.schema.DataType element_type = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FieldSchema, _impl_.element_type_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.element_type_)}},
    // .milvus.proto.schema.ValueField default_value = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 2, PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.default_value_)}},
    // bool is_dynamic = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FieldSchema, _impl_.is_dynamic_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.is_dynamic_)}},
    // bool is_partition_key = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FieldSchema, _impl_.is_partition_key_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.is_partition_key_)}},
    // bool is_clustering_key = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FieldSchema, _impl_.is_clustering_key_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.is_clustering_key_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 fieldID = 1;
    {PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.fieldid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_primary_key = 3;
    {PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.is_primary_key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string description = 4;
    {PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .milvus.proto.schema.DataType data_type = 5;
    {PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.data_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .milvus.proto.common.KeyValuePair type_params = 6;
    {PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.type_params_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .milvus.proto.common.KeyValuePair index_params = 7;
    {PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.index_params_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool autoID = 8;
    {PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.autoid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .milvus.proto.schema.FieldState state = 9;
    {PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .milvus.proto.schema.DataType element_type = 10;
    {PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.element_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .milvus.proto.schema.ValueField default_value = 11;
    {PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.default_value_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_dynamic = 12;
    {PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.is_dynamic_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_partition_key = 13;
    {PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.is_partition_key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_clustering_key = 14;
    {PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.is_clustering_key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::milvus::proto::common::KeyValuePair>()},
    {::_pbi::TcParser::GetTable<::milvus::proto::common::KeyValuePair>()},
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::ValueField>()},
  }}, {{
    "\37\0\4\0\13\0\0\0\0\0\0\0\0\0\0\0"
    "milvus.proto.schema.FieldSchema"
    "name"
    "description"
  }},
};

::uint8_t* FieldSchema::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.FieldSchema)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 fieldID = 1;
  if (this->_internal_fieldid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_fieldid(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.schema.FieldSchema.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bool is_primary_key = 3;
  if (this->_internal_is_primary_key() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_primary_key(), target);
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.schema.FieldSchema.description");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // .milvus.proto.schema.DataType data_type = 5;
  if (this->_internal_data_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_data_type(), target);
  }

  // repeated .milvus.proto.common.KeyValuePair type_params = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_type_params_size()); i < n; i++) {
    const auto& repfield = this->_internal_type_params().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .milvus.proto.common.KeyValuePair index_params = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_index_params_size()); i < n; i++) {
    const auto& repfield = this->_internal_index_params().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // bool autoID = 8;
  if (this->_internal_autoid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_autoid(), target);
  }

  // .milvus.proto.schema.FieldState state = 9;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_state(), target);
  }

  // .milvus.proto.schema.DataType element_type = 10;
  if (this->_internal_element_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        10, this->_internal_element_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .milvus.proto.schema.ValueField default_value = 11;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, _Internal::default_value(this),
        _Internal::default_value(this).GetCachedSize(), target, stream);
  }

  // bool is_dynamic = 12;
  if (this->_internal_is_dynamic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        12, this->_internal_is_dynamic(), target);
  }

  // bool is_partition_key = 13;
  if (this->_internal_is_partition_key() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        13, this->_internal_is_partition_key(), target);
  }

  // bool is_clustering_key = 14;
  if (this->_internal_is_clustering_key() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        14, this->_internal_is_clustering_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.FieldSchema)
  return target;
}

::size_t FieldSchema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.FieldSchema)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .milvus.proto.common.KeyValuePair type_params = 6;
  total_size += 1UL * this->_internal_type_params_size();
  for (const auto& msg : this->_internal_type_params()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .milvus.proto.common.KeyValuePair index_params = 7;
  total_size += 1UL * this->_internal_index_params_size();
  for (const auto& msg : this->_internal_index_params()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // .milvus.proto.schema.ValueField default_value = 11;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.default_value_);
  }

  // int64 fieldID = 1;
  if (this->_internal_fieldid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_fieldid());
  }

  // .milvus.proto.schema.DataType data_type = 5;
  if (this->_internal_data_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_data_type());
  }

  // .milvus.proto.schema.FieldState state = 9;
  if (this->_internal_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  // bool is_primary_key = 3;
  if (this->_internal_is_primary_key() != 0) {
    total_size += 2;
  }

  // bool autoID = 8;
  if (this->_internal_autoid() != 0) {
    total_size += 2;
  }

  // bool is_dynamic = 12;
  if (this->_internal_is_dynamic() != 0) {
    total_size += 2;
  }

  // bool is_partition_key = 13;
  if (this->_internal_is_partition_key() != 0) {
    total_size += 2;
  }

  // .milvus.proto.schema.DataType element_type = 10;
  if (this->_internal_element_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_element_type());
  }

  // bool is_clustering_key = 14;
  if (this->_internal_is_clustering_key() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FieldSchema::_class_data_ = {
    FieldSchema::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FieldSchema::GetClassData() const {
  return &_class_data_;
}

void FieldSchema::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FieldSchema*>(&to_msg);
  auto& from = static_cast<const FieldSchema&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.FieldSchema)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_type_params()->MergeFrom(
      from._internal_type_params());
  _this->_internal_mutable_index_params()->MergeFrom(
      from._internal_index_params());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_default_value()->::milvus::proto::schema::ValueField::MergeFrom(
        from._internal_default_value());
  }
  if (from._internal_fieldid() != 0) {
    _this->_internal_set_fieldid(from._internal_fieldid());
  }
  if (from._internal_data_type() != 0) {
    _this->_internal_set_data_type(from._internal_data_type());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_is_primary_key() != 0) {
    _this->_internal_set_is_primary_key(from._internal_is_primary_key());
  }
  if (from._internal_autoid() != 0) {
    _this->_internal_set_autoid(from._internal_autoid());
  }
  if (from._internal_is_dynamic() != 0) {
    _this->_internal_set_is_dynamic(from._internal_is_dynamic());
  }
  if (from._internal_is_partition_key() != 0) {
    _this->_internal_set_is_partition_key(from._internal_is_partition_key());
  }
  if (from._internal_element_type() != 0) {
    _this->_internal_set_element_type(from._internal_element_type());
  }
  if (from._internal_is_clustering_key() != 0) {
    _this->_internal_set_is_clustering_key(from._internal_is_clustering_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FieldSchema::CopyFrom(const FieldSchema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.FieldSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FieldSchema::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FieldSchema::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FieldSchema::InternalSwap(FieldSchema* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.type_params_.InternalSwap(&other->_impl_.type_params_);
  _impl_.index_params_.InternalSwap(&other->_impl_.index_params_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.is_clustering_key_)
      + sizeof(FieldSchema::_impl_.is_clustering_key_)
      - PROTOBUF_FIELD_OFFSET(FieldSchema, _impl_.default_value_)>(
          reinterpret_cast<char*>(&_impl_.default_value_),
          reinterpret_cast<char*>(&other->_impl_.default_value_));
}

::google::protobuf::Metadata FieldSchema::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[0]);
}
// ===================================================================

class CollectionSchema::_Internal {
 public:
};

CollectionSchema::CollectionSchema(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.CollectionSchema)
}
inline PROTOBUF_NDEBUG_INLINE CollectionSchema::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : fields_{visibility, arena, from.fields_},
        name_(arena, from.name_),
        description_(arena, from.description_),
        _cached_size_{0} {}

CollectionSchema::CollectionSchema(
    ::google::protobuf::Arena* arena,
    const CollectionSchema& from)
    : ::google::protobuf::Message(arena) {
  CollectionSchema* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, autoid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, autoid_),
           offsetof(Impl_, enable_dynamic_field_) -
               offsetof(Impl_, autoid_) +
               sizeof(Impl_::enable_dynamic_field_));

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.CollectionSchema)
}
inline PROTOBUF_NDEBUG_INLINE CollectionSchema::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : fields_{visibility, arena},
        name_(arena),
        description_(arena),
        _cached_size_{0} {}

inline void CollectionSchema::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, autoid_),
           0,
           offsetof(Impl_, enable_dynamic_field_) -
               offsetof(Impl_, autoid_) +
               sizeof(Impl_::enable_dynamic_field_));
}
CollectionSchema::~CollectionSchema() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.CollectionSchema)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollectionSchema::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollectionSchema::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.CollectionSchema)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fields_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  ::memset(&_impl_.autoid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.enable_dynamic_field_) -
      reinterpret_cast<char*>(&_impl_.autoid_)) + sizeof(_impl_.enable_dynamic_field_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollectionSchema::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 60, 2> CollectionSchema::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CollectionSchema_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CollectionSchema, _impl_.name_)}},
    // string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CollectionSchema, _impl_.description_)}},
    // bool autoID = 3 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CollectionSchema, _impl_.autoid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CollectionSchema, _impl_.autoid_)}},
    // repeated .milvus.proto.schema.FieldSchema fields = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CollectionSchema, _impl_.fields_)}},
    // bool enable_dynamic_field = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CollectionSchema, _impl_.enable_dynamic_field_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CollectionSchema, _impl_.enable_dynamic_field_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(CollectionSchema, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2;
    {PROTOBUF_FIELD_OFFSET(CollectionSchema, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool autoID = 3 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(CollectionSchema, _impl_.autoid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated .milvus.proto.schema.FieldSchema fields = 4;
    {PROTOBUF_FIELD_OFFSET(CollectionSchema, _impl_.fields_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool enable_dynamic_field = 5;
    {PROTOBUF_FIELD_OFFSET(CollectionSchema, _impl_.enable_dynamic_field_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::FieldSchema>()},
  }}, {{
    "\44\4\13\0\0\0\0\0"
    "milvus.proto.schema.CollectionSchema"
    "name"
    "description"
  }},
};

::uint8_t* CollectionSchema::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.CollectionSchema)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.schema.CollectionSchema.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.schema.CollectionSchema.description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bool autoID = 3 [deprecated = true];
  if (this->_internal_autoid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_autoid(), target);
  }

  // repeated .milvus.proto.schema.FieldSchema fields = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fields_size()); i < n; i++) {
    const auto& repfield = this->_internal_fields().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // bool enable_dynamic_field = 5;
  if (this->_internal_enable_dynamic_field() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_enable_dynamic_field(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.CollectionSchema)
  return target;
}

::size_t CollectionSchema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.CollectionSchema)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .milvus.proto.schema.FieldSchema fields = 4;
  total_size += 1UL * this->_internal_fields_size();
  for (const auto& msg : this->_internal_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // bool autoID = 3 [deprecated = true];
  if (this->_internal_autoid() != 0) {
    total_size += 2;
  }

  // bool enable_dynamic_field = 5;
  if (this->_internal_enable_dynamic_field() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollectionSchema::_class_data_ = {
    CollectionSchema::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollectionSchema::GetClassData() const {
  return &_class_data_;
}

void CollectionSchema::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollectionSchema*>(&to_msg);
  auto& from = static_cast<const CollectionSchema&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.CollectionSchema)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_fields()->MergeFrom(
      from._internal_fields());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_autoid() != 0) {
    _this->_internal_set_autoid(from._internal_autoid());
  }
  if (from._internal_enable_dynamic_field() != 0) {
    _this->_internal_set_enable_dynamic_field(from._internal_enable_dynamic_field());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollectionSchema::CopyFrom(const CollectionSchema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.CollectionSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollectionSchema::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CollectionSchema::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollectionSchema::InternalSwap(CollectionSchema* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.fields_.InternalSwap(&other->_impl_.fields_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CollectionSchema, _impl_.enable_dynamic_field_)
      + sizeof(CollectionSchema::_impl_.enable_dynamic_field_)
      - PROTOBUF_FIELD_OFFSET(CollectionSchema, _impl_.autoid_)>(
          reinterpret_cast<char*>(&_impl_.autoid_),
          reinterpret_cast<char*>(&other->_impl_.autoid_));
}

::google::protobuf::Metadata CollectionSchema::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[1]);
}
// ===================================================================

class BoolArray::_Internal {
 public:
};

BoolArray::BoolArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.BoolArray)
}
inline PROTOBUF_NDEBUG_INLINE BoolArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

BoolArray::BoolArray(
    ::google::protobuf::Arena* arena,
    const BoolArray& from)
    : ::google::protobuf::Message(arena) {
  BoolArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.BoolArray)
}
inline PROTOBUF_NDEBUG_INLINE BoolArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void BoolArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BoolArray::~BoolArray() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.BoolArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BoolArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BoolArray::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.BoolArray)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BoolArray::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> BoolArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BoolArray_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated bool data = 1;
    {::_pbi::TcParser::FastV8P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BoolArray, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bool data = 1;
    {PROTOBUF_FIELD_OFFSET(BoolArray, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BoolArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.BoolArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bool data = 1;
  if (this->_internal_data_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.BoolArray)
  return target;
}

::size_t BoolArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.BoolArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool data = 1;
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_data_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BoolArray::_class_data_ = {
    BoolArray::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BoolArray::GetClassData() const {
  return &_class_data_;
}

void BoolArray::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BoolArray*>(&to_msg);
  auto& from = static_cast<const BoolArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.BoolArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BoolArray::CopyFrom(const BoolArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.BoolArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BoolArray::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BoolArray::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BoolArray::InternalSwap(BoolArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata BoolArray::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[2]);
}
// ===================================================================

class IntArray::_Internal {
 public:
};

IntArray::IntArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.IntArray)
}
inline PROTOBUF_NDEBUG_INLINE IntArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        _data_cached_byte_size_{0},
        _cached_size_{0} {}

IntArray::IntArray(
    ::google::protobuf::Arena* arena,
    const IntArray& from)
    : ::google::protobuf::Message(arena) {
  IntArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.IntArray)
}
inline PROTOBUF_NDEBUG_INLINE IntArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        _data_cached_byte_size_{0},
        _cached_size_{0} {}

inline void IntArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
IntArray::~IntArray() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.IntArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IntArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void IntArray::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.IntArray)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IntArray::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> IntArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_IntArray_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int32 data = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IntArray, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 data = 1;
    {PROTOBUF_FIELD_OFFSET(IntArray, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* IntArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.IntArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 data = 1;
  {
    int byte_size = _impl_._data_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_data(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.IntArray)
  return target;
}

::size_t IntArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.IntArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 data = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_data())
    ;
    _impl_._data_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData IntArray::_class_data_ = {
    IntArray::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* IntArray::GetClassData() const {
  return &_class_data_;
}

void IntArray::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<IntArray*>(&to_msg);
  auto& from = static_cast<const IntArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.IntArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IntArray::CopyFrom(const IntArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.IntArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IntArray::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* IntArray::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void IntArray::InternalSwap(IntArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata IntArray::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[3]);
}
// ===================================================================

class LongArray::_Internal {
 public:
};

LongArray::LongArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.LongArray)
}
inline PROTOBUF_NDEBUG_INLINE LongArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        _data_cached_byte_size_{0},
        _cached_size_{0} {}

LongArray::LongArray(
    ::google::protobuf::Arena* arena,
    const LongArray& from)
    : ::google::protobuf::Message(arena) {
  LongArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.LongArray)
}
inline PROTOBUF_NDEBUG_INLINE LongArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        _data_cached_byte_size_{0},
        _cached_size_{0} {}

inline void LongArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LongArray::~LongArray() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.LongArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LongArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LongArray::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.LongArray)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LongArray::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> LongArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LongArray_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int64 data = 1;
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LongArray, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int64 data = 1;
    {PROTOBUF_FIELD_OFFSET(LongArray, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* LongArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.LongArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int64 data = 1;
  {
    int byte_size = _impl_._data_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, _internal_data(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.LongArray)
  return target;
}

::size_t LongArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.LongArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 data = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_data())
    ;
    _impl_._data_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LongArray::_class_data_ = {
    LongArray::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LongArray::GetClassData() const {
  return &_class_data_;
}

void LongArray::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LongArray*>(&to_msg);
  auto& from = static_cast<const LongArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.LongArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LongArray::CopyFrom(const LongArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.LongArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LongArray::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LongArray::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LongArray::InternalSwap(LongArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata LongArray::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[4]);
}
// ===================================================================

class FloatArray::_Internal {
 public:
};

FloatArray::FloatArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.FloatArray)
}
inline PROTOBUF_NDEBUG_INLINE FloatArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

FloatArray::FloatArray(
    ::google::protobuf::Arena* arena,
    const FloatArray& from)
    : ::google::protobuf::Message(arena) {
  FloatArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.FloatArray)
}
inline PROTOBUF_NDEBUG_INLINE FloatArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void FloatArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FloatArray::~FloatArray() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.FloatArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FloatArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FloatArray::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.FloatArray)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FloatArray::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> FloatArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FloatArray_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated float data = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FloatArray, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float data = 1;
    {PROTOBUF_FIELD_OFFSET(FloatArray, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FloatArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.FloatArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float data = 1;
  if (this->_internal_data_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.FloatArray)
  return target;
}

::size_t FloatArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.FloatArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float data = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_data_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FloatArray::_class_data_ = {
    FloatArray::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FloatArray::GetClassData() const {
  return &_class_data_;
}

void FloatArray::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FloatArray*>(&to_msg);
  auto& from = static_cast<const FloatArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.FloatArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FloatArray::CopyFrom(const FloatArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.FloatArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FloatArray::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FloatArray::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FloatArray::InternalSwap(FloatArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata FloatArray::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[5]);
}
// ===================================================================

class DoubleArray::_Internal {
 public:
};

DoubleArray::DoubleArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.DoubleArray)
}
inline PROTOBUF_NDEBUG_INLINE DoubleArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

DoubleArray::DoubleArray(
    ::google::protobuf::Arena* arena,
    const DoubleArray& from)
    : ::google::protobuf::Message(arena) {
  DoubleArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.DoubleArray)
}
inline PROTOBUF_NDEBUG_INLINE DoubleArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void DoubleArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DoubleArray::~DoubleArray() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.DoubleArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DoubleArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DoubleArray::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.DoubleArray)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DoubleArray::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> DoubleArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DoubleArray_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated double data = 1;
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DoubleArray, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double data = 1;
    {PROTOBUF_FIELD_OFFSET(DoubleArray, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* DoubleArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.DoubleArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double data = 1;
  if (this->_internal_data_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.DoubleArray)
  return target;
}

::size_t DoubleArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.DoubleArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double data = 1;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_data_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DoubleArray::_class_data_ = {
    DoubleArray::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DoubleArray::GetClassData() const {
  return &_class_data_;
}

void DoubleArray::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DoubleArray*>(&to_msg);
  auto& from = static_cast<const DoubleArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.DoubleArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DoubleArray::CopyFrom(const DoubleArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.DoubleArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DoubleArray::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DoubleArray::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DoubleArray::InternalSwap(DoubleArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata DoubleArray::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[6]);
}
// ===================================================================

class BytesArray::_Internal {
 public:
};

BytesArray::BytesArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.BytesArray)
}
inline PROTOBUF_NDEBUG_INLINE BytesArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

BytesArray::BytesArray(
    ::google::protobuf::Arena* arena,
    const BytesArray& from)
    : ::google::protobuf::Message(arena) {
  BytesArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.BytesArray)
}
inline PROTOBUF_NDEBUG_INLINE BytesArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void BytesArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BytesArray::~BytesArray() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.BytesArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BytesArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BytesArray::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.BytesArray)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BytesArray::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> BytesArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BytesArray_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated bytes data = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BytesArray, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(BytesArray, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BytesArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.BytesArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes data = 1;
  for (int i = 0, n = this->_internal_data_size(); i < n; ++i) {
    const auto& s = this->_internal_data().Get(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.BytesArray)
  return target;
}

::size_t BytesArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.BytesArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes data = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_data().size());
  for (int i = 0, n = _internal_data().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_data().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BytesArray::_class_data_ = {
    BytesArray::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BytesArray::GetClassData() const {
  return &_class_data_;
}

void BytesArray::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BytesArray*>(&to_msg);
  auto& from = static_cast<const BytesArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.BytesArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BytesArray::CopyFrom(const BytesArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.BytesArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BytesArray::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BytesArray::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BytesArray::InternalSwap(BytesArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata BytesArray::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[7]);
}
// ===================================================================

class StringArray::_Internal {
 public:
};

StringArray::StringArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.StringArray)
}
inline PROTOBUF_NDEBUG_INLINE StringArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

StringArray::StringArray(
    ::google::protobuf::Arena* arena,
    const StringArray& from)
    : ::google::protobuf::Message(arena) {
  StringArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.StringArray)
}
inline PROTOBUF_NDEBUG_INLINE StringArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void StringArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StringArray::~StringArray() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.StringArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StringArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StringArray::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.StringArray)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StringArray::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 44, 2> StringArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StringArray_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string data = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StringArray, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string data = 1;
    {PROTOBUF_FIELD_OFFSET(StringArray, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\37\4\0\0\0\0\0\0"
    "milvus.proto.schema.StringArray"
    "data"
  }},
};

::uint8_t* StringArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.StringArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string data = 1;
  for (int i = 0, n = this->_internal_data_size(); i < n; ++i) {
    const auto& s = this->_internal_data().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.schema.StringArray.data");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.StringArray)
  return target;
}

::size_t StringArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.StringArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string data = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_data().size());
  for (int i = 0, n = _internal_data().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_data().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StringArray::_class_data_ = {
    StringArray::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StringArray::GetClassData() const {
  return &_class_data_;
}

void StringArray::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StringArray*>(&to_msg);
  auto& from = static_cast<const StringArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.StringArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StringArray::CopyFrom(const StringArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.StringArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StringArray::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StringArray::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StringArray::InternalSwap(StringArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata StringArray::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[8]);
}
// ===================================================================

class ArrayArray::_Internal {
 public:
};

ArrayArray::ArrayArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.ArrayArray)
}
inline PROTOBUF_NDEBUG_INLINE ArrayArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

ArrayArray::ArrayArray(
    ::google::protobuf::Arena* arena,
    const ArrayArray& from)
    : ::google::protobuf::Message(arena) {
  ArrayArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.element_type_ = from._impl_.element_type_;

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.ArrayArray)
}
inline PROTOBUF_NDEBUG_INLINE ArrayArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void ArrayArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.element_type_ = {};
}
ArrayArray::~ArrayArray() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.ArrayArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ArrayArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ArrayArray::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.ArrayArray)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _impl_.element_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ArrayArray::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ArrayArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ArrayArray_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .milvus.proto.schema.DataType element_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ArrayArray, _impl_.element_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ArrayArray, _impl_.element_type_)}},
    // repeated .milvus.proto.schema.ScalarField data = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ArrayArray, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .milvus.proto.schema.ScalarField data = 1;
    {PROTOBUF_FIELD_OFFSET(ArrayArray, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .milvus.proto.schema.DataType element_type = 2;
    {PROTOBUF_FIELD_OFFSET(ArrayArray, _impl_.element_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::ScalarField>()},
  }}, {{
  }},
};

::uint8_t* ArrayArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.ArrayArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .milvus.proto.schema.ScalarField data = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .milvus.proto.schema.DataType element_type = 2;
  if (this->_internal_element_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_element_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.ArrayArray)
  return target;
}

::size_t ArrayArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.ArrayArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .milvus.proto.schema.ScalarField data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->_internal_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .milvus.proto.schema.DataType element_type = 2;
  if (this->_internal_element_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_element_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ArrayArray::_class_data_ = {
    ArrayArray::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ArrayArray::GetClassData() const {
  return &_class_data_;
}

void ArrayArray::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ArrayArray*>(&to_msg);
  auto& from = static_cast<const ArrayArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.ArrayArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(
      from._internal_data());
  if (from._internal_element_type() != 0) {
    _this->_internal_set_element_type(from._internal_element_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArrayArray::CopyFrom(const ArrayArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.ArrayArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ArrayArray::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ArrayArray::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ArrayArray::InternalSwap(ArrayArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  swap(_impl_.element_type_, other->_impl_.element_type_);
}

::google::protobuf::Metadata ArrayArray::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[9]);
}
// ===================================================================

class JSONArray::_Internal {
 public:
};

JSONArray::JSONArray(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.JSONArray)
}
inline PROTOBUF_NDEBUG_INLINE JSONArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

JSONArray::JSONArray(
    ::google::protobuf::Arena* arena,
    const JSONArray& from)
    : ::google::protobuf::Message(arena) {
  JSONArray* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.JSONArray)
}
inline PROTOBUF_NDEBUG_INLINE JSONArray::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void JSONArray::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
JSONArray::~JSONArray() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.JSONArray)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void JSONArray::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void JSONArray::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.JSONArray)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* JSONArray::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> JSONArray::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_JSONArray_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated bytes data = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(JSONArray, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(JSONArray, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* JSONArray::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.JSONArray)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes data = 1;
  for (int i = 0, n = this->_internal_data_size(); i < n; ++i) {
    const auto& s = this->_internal_data().Get(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.JSONArray)
  return target;
}

::size_t JSONArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.JSONArray)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes data = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_data().size());
  for (int i = 0, n = _internal_data().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_data().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData JSONArray::_class_data_ = {
    JSONArray::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* JSONArray::GetClassData() const {
  return &_class_data_;
}

void JSONArray::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<JSONArray*>(&to_msg);
  auto& from = static_cast<const JSONArray&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.JSONArray)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JSONArray::CopyFrom(const JSONArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.JSONArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool JSONArray::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* JSONArray::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void JSONArray::InternalSwap(JSONArray* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata JSONArray::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[10]);
}
// ===================================================================

class ValueField::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ValueField, _impl_._oneof_case_);
};

ValueField::ValueField(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.ValueField)
}
inline PROTOBUF_NDEBUG_INLINE ValueField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ValueField::ValueField(
    ::google::protobuf::Arena* arena,
    const ValueField& from)
    : ::google::protobuf::Message(arena) {
  ValueField* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (data_case()) {
    case DATA_NOT_SET:
      break;
      case kBoolData:
        _impl_.data_.bool_data_ = from._impl_.data_.bool_data_;
        break;
      case kIntData:
        _impl_.data_.int_data_ = from._impl_.data_.int_data_;
        break;
      case kLongData:
        _impl_.data_.long_data_ = from._impl_.data_.long_data_;
        break;
      case kFloatData:
        _impl_.data_.float_data_ = from._impl_.data_.float_data_;
        break;
      case kDoubleData:
        _impl_.data_.double_data_ = from._impl_.data_.double_data_;
        break;
      case kStringData:
        new (&_impl_.data_.string_data_) decltype(_impl_.data_.string_data_){arena, from._impl_.data_.string_data_};
        break;
      case kBytesData:
        new (&_impl_.data_.bytes_data_) decltype(_impl_.data_.bytes_data_){arena, from._impl_.data_.bytes_data_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.ValueField)
}
inline PROTOBUF_NDEBUG_INLINE ValueField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ValueField::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ValueField::~ValueField() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.ValueField)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ValueField::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_data()) {
    clear_data();
  }
  _impl_.~Impl_();
}

void ValueField::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:milvus.proto.schema.ValueField)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (data_case()) {
    case kBoolData: {
      // No need to clear
      break;
    }
    case kIntData: {
      // No need to clear
      break;
    }
    case kLongData: {
      // No need to clear
      break;
    }
    case kFloatData: {
      // No need to clear
      break;
    }
    case kDoubleData: {
      // No need to clear
      break;
    }
    case kStringData: {
      _impl_.data_.string_data_.Destroy();
      break;
    }
    case kBytesData: {
      _impl_.data_.bytes_data_.Destroy();
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}


PROTOBUF_NOINLINE void ValueField::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.ValueField)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ValueField::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 7, 0, 50, 2> ValueField::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ValueField_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool bool_data = 1;
    {PROTOBUF_FIELD_OFFSET(ValueField, _impl_.data_.bool_data_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // int32 int_data = 2;
    {PROTOBUF_FIELD_OFFSET(ValueField, _impl_.data_.int_data_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // int64 long_data = 3;
    {PROTOBUF_FIELD_OFFSET(ValueField, _impl_.data_.long_data_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // float float_data = 4;
    {PROTOBUF_FIELD_OFFSET(ValueField, _impl_.data_.float_data_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
    // double double_data = 5;
    {PROTOBUF_FIELD_OFFSET(ValueField, _impl_.data_.double_data_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
    // string string_data = 6;
    {PROTOBUF_FIELD_OFFSET(ValueField, _impl_.data_.string_data_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes bytes_data = 7;
    {PROTOBUF_FIELD_OFFSET(ValueField, _impl_.data_.bytes_data_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\0\0\0\0\0\13\0"
    "milvus.proto.schema.ValueField"
    "string_data"
  }},
};

::uint8_t* ValueField::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.ValueField)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (data_case()) {
    case kBoolData: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this->_internal_bool_data(), target);
      break;
    }
    case kIntData: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt32ToArrayWithField<2>(
              stream, this->_internal_int_data(), target);
      break;
    }
    case kLongData: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt64ToArrayWithField<3>(
              stream, this->_internal_long_data(), target);
      break;
    }
    case kFloatData: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          4, this->_internal_float_data(), target);
      break;
    }
    case kDoubleData: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this->_internal_double_data(), target);
      break;
    }
    case kStringData: {
      const std::string& _s = this->_internal_string_data();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.schema.ValueField.string_data");
      target = stream->WriteStringMaybeAliased(6, _s, target);
      break;
    }
    case kBytesData: {
      const std::string& _s = this->_internal_bytes_data();
      target = stream->WriteBytesMaybeAliased(7, _s, target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.ValueField)
  return target;
}

::size_t ValueField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.ValueField)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (data_case()) {
    // bool bool_data = 1;
    case kBoolData: {
      total_size += 2;
      break;
    }
    // int32 int_data = 2;
    case kIntData: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_int_data());
      break;
    }
    // int64 long_data = 3;
    case kLongData: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_long_data());
      break;
    }
    // float float_data = 4;
    case kFloatData: {
      total_size += 5;
      break;
    }
    // double double_data = 5;
    case kDoubleData: {
      total_size += 9;
      break;
    }
    // string string_data = 6;
    case kStringData: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_string_data());
      break;
    }
    // bytes bytes_data = 7;
    case kBytesData: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_bytes_data());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ValueField::_class_data_ = {
    ValueField::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ValueField::GetClassData() const {
  return &_class_data_;
}

void ValueField::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ValueField*>(&to_msg);
  auto& from = static_cast<const ValueField&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.ValueField)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kBoolData: {
      _this->_internal_set_bool_data(from._internal_bool_data());
      break;
    }
    case kIntData: {
      _this->_internal_set_int_data(from._internal_int_data());
      break;
    }
    case kLongData: {
      _this->_internal_set_long_data(from._internal_long_data());
      break;
    }
    case kFloatData: {
      _this->_internal_set_float_data(from._internal_float_data());
      break;
    }
    case kDoubleData: {
      _this->_internal_set_double_data(from._internal_double_data());
      break;
    }
    case kStringData: {
      _this->_internal_set_string_data(from._internal_string_data());
      break;
    }
    case kBytesData: {
      _this->_internal_set_bytes_data(from._internal_bytes_data());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValueField::CopyFrom(const ValueField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.ValueField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ValueField::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ValueField::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ValueField::InternalSwap(ValueField* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ValueField::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[11]);
}
// ===================================================================

class ScalarField::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::ScalarField, _impl_._oneof_case_);
  static const ::milvus::proto::schema::BoolArray& bool_data(const ScalarField* msg);
  static const ::milvus::proto::schema::IntArray& int_data(const ScalarField* msg);
  static const ::milvus::proto::schema::LongArray& long_data(const ScalarField* msg);
  static const ::milvus::proto::schema::FloatArray& float_data(const ScalarField* msg);
  static const ::milvus::proto::schema::DoubleArray& double_data(const ScalarField* msg);
  static const ::milvus::proto::schema::StringArray& string_data(const ScalarField* msg);
  static const ::milvus::proto::schema::BytesArray& bytes_data(const ScalarField* msg);
  static const ::milvus::proto::schema::ArrayArray& array_data(const ScalarField* msg);
  static const ::milvus::proto::schema::JSONArray& json_data(const ScalarField* msg);
};

const ::milvus::proto::schema::BoolArray& ScalarField::_Internal::bool_data(const ScalarField* msg) {
  return *msg->_impl_.data_.bool_data_;
}
const ::milvus::proto::schema::IntArray& ScalarField::_Internal::int_data(const ScalarField* msg) {
  return *msg->_impl_.data_.int_data_;
}
const ::milvus::proto::schema::LongArray& ScalarField::_Internal::long_data(const ScalarField* msg) {
  return *msg->_impl_.data_.long_data_;
}
const ::milvus::proto::schema::FloatArray& ScalarField::_Internal::float_data(const ScalarField* msg) {
  return *msg->_impl_.data_.float_data_;
}
const ::milvus::proto::schema::DoubleArray& ScalarField::_Internal::double_data(const ScalarField* msg) {
  return *msg->_impl_.data_.double_data_;
}
const ::milvus::proto::schema::StringArray& ScalarField::_Internal::string_data(const ScalarField* msg) {
  return *msg->_impl_.data_.string_data_;
}
const ::milvus::proto::schema::BytesArray& ScalarField::_Internal::bytes_data(const ScalarField* msg) {
  return *msg->_impl_.data_.bytes_data_;
}
const ::milvus::proto::schema::ArrayArray& ScalarField::_Internal::array_data(const ScalarField* msg) {
  return *msg->_impl_.data_.array_data_;
}
const ::milvus::proto::schema::JSONArray& ScalarField::_Internal::json_data(const ScalarField* msg) {
  return *msg->_impl_.data_.json_data_;
}
void ScalarField::set_allocated_bool_data(::milvus::proto::schema::BoolArray* bool_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (bool_data) {
    ::google::protobuf::Arena* submessage_arena = bool_data->GetArena();
    if (message_arena != submessage_arena) {
      bool_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, bool_data, submessage_arena);
    }
    set_has_bool_data();
    _impl_.data_.bool_data_ = bool_data;
  }
  // @@protoc_insertion_point(field_set_allocated:milvus.proto.schema.ScalarField.bool_data)
}
void ScalarField::set_allocated_int_data(::milvus::proto::schema::IntArray* int_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (int_data) {
    ::google::protobuf::Arena* submessage_arena = int_data->GetArena();
    if (message_arena != submessage_arena) {
      int_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, int_data, submessage_arena);
    }
    set_has_int_data();
    _impl_.data_.int_data_ = int_data;
  }
  // @@protoc_insertion_point(field_set_allocated:milvus.proto.schema.ScalarField.int_data)
}
void ScalarField::set_allocated_long_data(::milvus::proto::schema::LongArray* long_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (long_data) {
    ::google::protobuf::Arena* submessage_arena = long_data->GetArena();
    if (message_arena != submessage_arena) {
      long_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, long_data, submessage_arena);
    }
    set_has_long_data();
    _impl_.data_.long_data_ = long_data;
  }
  // @@protoc_insertion_point(field_set_allocated:milvus.proto.schema.ScalarField.long_data)
}
void ScalarField::set_allocated_float_data(::milvus::proto::schema::FloatArray* float_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (float_data) {
    ::google::protobuf::Arena* submessage_arena = float_data->GetArena();
    if (message_arena != submessage_arena) {
      float_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, float_data, submessage_arena);
    }
    set_has_float_data();
    _impl_.data_.float_data_ = float_data;
  }
  // @@protoc_insertion_point(field_set_allocated:milvus.proto.schema.ScalarField.float_data)
}
void ScalarField::set_allocated_double_data(::milvus::proto::schema::DoubleArray* double_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (double_data) {
    ::google::protobuf::Arena* submessage_arena = double_data->GetArena();
    if (message_arena != submessage_arena) {
      double_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, double_data, submessage_arena);
    }
    set_has_double_data();
    _impl_.data_.double_data_ = double_data;
  }
  // @@protoc_insertion_point(field_set_allocated:milvus.proto.schema.ScalarField.double_data)
}
void ScalarField::set_allocated_string_data(::milvus::proto::schema::StringArray* string_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (string_data) {
    ::google::protobuf::Arena* submessage_arena = string_data->GetArena();
    if (message_arena != submessage_arena) {
      string_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, string_data, submessage_arena);
    }
    set_has_string_data();
    _impl_.data_.string_data_ = string_data;
  }
  // @@protoc_insertion_point(field_set_allocated:milvus.proto.schema.ScalarField.string_data)
}
void ScalarField::set_allocated_bytes_data(::milvus::proto::schema::BytesArray* bytes_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (bytes_data) {
    ::google::protobuf::Arena* submessage_arena = bytes_data->GetArena();
    if (message_arena != submessage_arena) {
      bytes_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, bytes_data, submessage_arena);
    }
    set_has_bytes_data();
    _impl_.data_.bytes_data_ = bytes_data;
  }
  // @@protoc_insertion_point(field_set_allocated:milvus.proto.schema.ScalarField.bytes_data)
}
void ScalarField::set_allocated_array_data(::milvus::proto::schema::ArrayArray* array_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (array_data) {
    ::google::protobuf::Arena* submessage_arena = array_data->GetArena();
    if (message_arena != submessage_arena) {
      array_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, array_data, submessage_arena);
    }
    set_has_array_data();
    _impl_.data_.array_data_ = array_data;
  }
  // @@protoc_insertion_point(field_set_allocated:milvus.proto.schema.ScalarField.array_data)
}
void ScalarField::set_allocated_json_data(::milvus::proto::schema::JSONArray* json_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (json_data) {
    ::google::protobuf::Arena* submessage_arena = json_data->GetArena();
    if (message_arena != submessage_arena) {
      json_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, json_data, submessage_arena);
    }
    set_has_json_data();
    _impl_.data_.json_data_ = json_data;
  }
  // @@protoc_insertion_point(field_set_allocated:milvus.proto.schema.ScalarField.json_data)
}
ScalarField::ScalarField(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.ScalarField)
}
inline PROTOBUF_NDEBUG_INLINE ScalarField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ScalarField::ScalarField(
    ::google::protobuf::Arena* arena,
    const ScalarField& from)
    : ::google::protobuf::Message(arena) {
  ScalarField* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (data_case()) {
    case DATA_NOT_SET:
      break;
      case kBoolData:
        _impl_.data_.bool_data_ = CreateMaybeMessage<::milvus::proto::schema::BoolArray>(arena, *from._impl_.data_.bool_data_);
        break;
      case kIntData:
        _impl_.data_.int_data_ = CreateMaybeMessage<::milvus::proto::schema::IntArray>(arena, *from._impl_.data_.int_data_);
        break;
      case kLongData:
        _impl_.data_.long_data_ = CreateMaybeMessage<::milvus::proto::schema::LongArray>(arena, *from._impl_.data_.long_data_);
        break;
      case kFloatData:
        _impl_.data_.float_data_ = CreateMaybeMessage<::milvus::proto::schema::FloatArray>(arena, *from._impl_.data_.float_data_);
        break;
      case kDoubleData:
        _impl_.data_.double_data_ = CreateMaybeMessage<::milvus::proto::schema::DoubleArray>(arena, *from._impl_.data_.double_data_);
        break;
      case kStringData:
        _impl_.data_.string_data_ = CreateMaybeMessage<::milvus::proto::schema::StringArray>(arena, *from._impl_.data_.string_data_);
        break;
      case kBytesData:
        _impl_.data_.bytes_data_ = CreateMaybeMessage<::milvus::proto::schema::BytesArray>(arena, *from._impl_.data_.bytes_data_);
        break;
      case kArrayData:
        _impl_.data_.array_data_ = CreateMaybeMessage<::milvus::proto::schema::ArrayArray>(arena, *from._impl_.data_.array_data_);
        break;
      case kJsonData:
        _impl_.data_.json_data_ = CreateMaybeMessage<::milvus::proto::schema::JSONArray>(arena, *from._impl_.data_.json_data_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.ScalarField)
}
inline PROTOBUF_NDEBUG_INLINE ScalarField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ScalarField::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ScalarField::~ScalarField() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.ScalarField)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ScalarField::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_data()) {
    clear_data();
  }
  _impl_.~Impl_();
}

void ScalarField::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:milvus.proto.schema.ScalarField)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (data_case()) {
    case kBoolData: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.bool_data_;
      }
      break;
    }
    case kIntData: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.int_data_;
      }
      break;
    }
    case kLongData: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.long_data_;
      }
      break;
    }
    case kFloatData: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.float_data_;
      }
      break;
    }
    case kDoubleData: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.double_data_;
      }
      break;
    }
    case kStringData: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.string_data_;
      }
      break;
    }
    case kBytesData: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.bytes_data_;
      }
      break;
    }
    case kArrayData: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.array_data_;
      }
      break;
    }
    case kJsonData: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.json_data_;
      }
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}


PROTOBUF_NOINLINE void ScalarField::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.ScalarField)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ScalarField::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 9, 9, 0, 2> ScalarField::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ScalarField_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .milvus.proto.schema.BoolArray bool_data = 1;
    {PROTOBUF_FIELD_OFFSET(ScalarField, _impl_.data_.bool_data_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .milvus.proto.schema.IntArray int_data = 2;
    {PROTOBUF_FIELD_OFFSET(ScalarField, _impl_.data_.int_data_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .milvus.proto.schema.LongArray long_data = 3;
    {PROTOBUF_FIELD_OFFSET(ScalarField, _impl_.data_.long_data_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .milvus.proto.schema.FloatArray float_data = 4;
    {PROTOBUF_FIELD_OFFSET(ScalarField, _impl_.data_.float_data_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .milvus.proto.schema.DoubleArray double_data = 5;
    {PROTOBUF_FIELD_OFFSET(ScalarField, _impl_.data_.double_data_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .milvus.proto.schema.StringArray string_data = 6;
    {PROTOBUF_FIELD_OFFSET(ScalarField, _impl_.data_.string_data_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .milvus.proto.schema.BytesArray bytes_data = 7;
    {PROTOBUF_FIELD_OFFSET(ScalarField, _impl_.data_.bytes_data_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .milvus.proto.schema.ArrayArray array_data = 8;
    {PROTOBUF_FIELD_OFFSET(ScalarField, _impl_.data_.array_data_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .milvus.proto.schema.JSONArray json_data = 9;
    {PROTOBUF_FIELD_OFFSET(ScalarField, _impl_.data_.json_data_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::BoolArray>()},
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::IntArray>()},
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::LongArray>()},
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::FloatArray>()},
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::DoubleArray>()},
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::StringArray>()},
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::BytesArray>()},
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::ArrayArray>()},
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::JSONArray>()},
  }}, {{
  }},
};

::uint8_t* ScalarField::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.ScalarField)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (data_case()) {
    case kBoolData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::bool_data(this),
          _Internal::bool_data(this).GetCachedSize(), target, stream);
      break;
    }
    case kIntData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::int_data(this),
          _Internal::int_data(this).GetCachedSize(), target, stream);
      break;
    }
    case kLongData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::long_data(this),
          _Internal::long_data(this).GetCachedSize(), target, stream);
      break;
    }
    case kFloatData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::float_data(this),
          _Internal::float_data(this).GetCachedSize(), target, stream);
      break;
    }
    case kDoubleData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::double_data(this),
          _Internal::double_data(this).GetCachedSize(), target, stream);
      break;
    }
    case kStringData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::string_data(this),
          _Internal::string_data(this).GetCachedSize(), target, stream);
      break;
    }
    case kBytesData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, _Internal::bytes_data(this),
          _Internal::bytes_data(this).GetCachedSize(), target, stream);
      break;
    }
    case kArrayData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, _Internal::array_data(this),
          _Internal::array_data(this).GetCachedSize(), target, stream);
      break;
    }
    case kJsonData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, _Internal::json_data(this),
          _Internal::json_data(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.ScalarField)
  return target;
}

::size_t ScalarField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.ScalarField)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (data_case()) {
    // .milvus.proto.schema.BoolArray bool_data = 1;
    case kBoolData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_.bool_data_);
      break;
    }
    // .milvus.proto.schema.IntArray int_data = 2;
    case kIntData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_.int_data_);
      break;
    }
    // .milvus.proto.schema.LongArray long_data = 3;
    case kLongData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_.long_data_);
      break;
    }
    // .milvus.proto.schema.FloatArray float_data = 4;
    case kFloatData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_.float_data_);
      break;
    }
    // .milvus.proto.schema.DoubleArray double_data = 5;
    case kDoubleData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_.double_data_);
      break;
    }
    // .milvus.proto.schema.StringArray string_data = 6;
    case kStringData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_.string_data_);
      break;
    }
    // .milvus.proto.schema.BytesArray bytes_data = 7;
    case kBytesData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_.bytes_data_);
      break;
    }
    // .milvus.proto.schema.ArrayArray array_data = 8;
    case kArrayData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_.array_data_);
      break;
    }
    // .milvus.proto.schema.JSONArray json_data = 9;
    case kJsonData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_.json_data_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ScalarField::_class_data_ = {
    ScalarField::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ScalarField::GetClassData() const {
  return &_class_data_;
}

void ScalarField::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ScalarField*>(&to_msg);
  auto& from = static_cast<const ScalarField&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.ScalarField)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kBoolData: {
      _this->_internal_mutable_bool_data()->::milvus::proto::schema::BoolArray::MergeFrom(
          from._internal_bool_data());
      break;
    }
    case kIntData: {
      _this->_internal_mutable_int_data()->::milvus::proto::schema::IntArray::MergeFrom(
          from._internal_int_data());
      break;
    }
    case kLongData: {
      _this->_internal_mutable_long_data()->::milvus::proto::schema::LongArray::MergeFrom(
          from._internal_long_data());
      break;
    }
    case kFloatData: {
      _this->_internal_mutable_float_data()->::milvus::proto::schema::FloatArray::MergeFrom(
          from._internal_float_data());
      break;
    }
    case kDoubleData: {
      _this->_internal_mutable_double_data()->::milvus::proto::schema::DoubleArray::MergeFrom(
          from._internal_double_data());
      break;
    }
    case kStringData: {
      _this->_internal_mutable_string_data()->::milvus::proto::schema::StringArray::MergeFrom(
          from._internal_string_data());
      break;
    }
    case kBytesData: {
      _this->_internal_mutable_bytes_data()->::milvus::proto::schema::BytesArray::MergeFrom(
          from._internal_bytes_data());
      break;
    }
    case kArrayData: {
      _this->_internal_mutable_array_data()->::milvus::proto::schema::ArrayArray::MergeFrom(
          from._internal_array_data());
      break;
    }
    case kJsonData: {
      _this->_internal_mutable_json_data()->::milvus::proto::schema::JSONArray::MergeFrom(
          from._internal_json_data());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarField::CopyFrom(const ScalarField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.ScalarField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ScalarField::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ScalarField::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ScalarField::InternalSwap(ScalarField* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ScalarField::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[12]);
}
// ===================================================================

class VectorField::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::VectorField, _impl_._oneof_case_);
  static const ::milvus::proto::schema::FloatArray& float_vector(const VectorField* msg);
};

const ::milvus::proto::schema::FloatArray& VectorField::_Internal::float_vector(const VectorField* msg) {
  return *msg->_impl_.data_.float_vector_;
}
void VectorField::set_allocated_float_vector(::milvus::proto::schema::FloatArray* float_vector) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_data();
  if (float_vector) {
    ::google::protobuf::Arena* submessage_arena = float_vector->GetArena();
    if (message_arena != submessage_arena) {
      float_vector = ::google::protobuf::internal::GetOwnedMessage(message_arena, float_vector, submessage_arena);
    }
    set_has_float_vector();
    _impl_.data_.float_vector_ = float_vector;
  }
  // @@protoc_insertion_point(field_set_allocated:milvus.proto.schema.VectorField.float_vector)
}
VectorField::VectorField(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.VectorField)
}
inline PROTOBUF_NDEBUG_INLINE VectorField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

VectorField::VectorField(
    ::google::protobuf::Arena* arena,
    const VectorField& from)
    : ::google::protobuf::Message(arena) {
  VectorField* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.dim_ = from._impl_.dim_;
  switch (data_case()) {
    case DATA_NOT_SET:
      break;
      case kFloatVector:
        _impl_.data_.float_vector_ = CreateMaybeMessage<::milvus::proto::schema::FloatArray>(arena, *from._impl_.data_.float_vector_);
        break;
      case kBinaryVector:
        new (&_impl_.data_.binary_vector_) decltype(_impl_.data_.binary_vector_){arena, from._impl_.data_.binary_vector_};
        break;
      case kFloat16Vector:
        new (&_impl_.data_.float16_vector_) decltype(_impl_.data_.float16_vector_){arena, from._impl_.data_.float16_vector_};
        break;
      case kBfloat16Vector:
        new (&_impl_.data_.bfloat16_vector_) decltype(_impl_.data_.bfloat16_vector_){arena, from._impl_.data_.bfloat16_vector_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.VectorField)
}
inline PROTOBUF_NDEBUG_INLINE VectorField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void VectorField::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.dim_ = {};
}
VectorField::~VectorField() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.VectorField)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VectorField::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_data()) {
    clear_data();
  }
  _impl_.~Impl_();
}

void VectorField::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:milvus.proto.schema.VectorField)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (data_case()) {
    case kFloatVector: {
      if (GetArena() == nullptr) {
        delete _impl_.data_.float_vector_;
      }
      break;
    }
    case kBinaryVector: {
      _impl_.data_.binary_vector_.Destroy();
      break;
    }
    case kFloat16Vector: {
      _impl_.data_.float16_vector_.Destroy();
      break;
    }
    case kBfloat16Vector: {
      _impl_.data_.bfloat16_vector_.Destroy();
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}


PROTOBUF_NOINLINE void VectorField::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.VectorField)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dim_ = ::int64_t{0};
  clear_data();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VectorField::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 1, 0, 2> VectorField::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VectorField_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 dim = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(VectorField, _impl_.dim_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VectorField, _impl_.dim_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 dim = 1;
    {PROTOBUF_FIELD_OFFSET(VectorField, _impl_.dim_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .milvus.proto.schema.FloatArray float_vector = 2;
    {PROTOBUF_FIELD_OFFSET(VectorField, _impl_.data_.float_vector_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes binary_vector = 3;
    {PROTOBUF_FIELD_OFFSET(VectorField, _impl_.data_.binary_vector_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes float16_vector = 4;
    {PROTOBUF_FIELD_OFFSET(VectorField, _impl_.data_.float16_vector_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes bfloat16_vector = 5;
    {PROTOBUF_FIELD_OFFSET(VectorField, _impl_.data_.bfloat16_vector_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::FloatArray>()},
  }}, {{
  }},
};

::uint8_t* VectorField::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.VectorField)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 dim = 1;
  if (this->_internal_dim() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_dim(), target);
  }

  switch (data_case()) {
    case kFloatVector: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::float_vector(this),
          _Internal::float_vector(this).GetCachedSize(), target, stream);
      break;
    }
    case kBinaryVector: {
      const std::string& _s = this->_internal_binary_vector();
      target = stream->WriteBytesMaybeAliased(3, _s, target);
      break;
    }
    case kFloat16Vector: {
      const std::string& _s = this->_internal_float16_vector();
      target = stream->WriteBytesMaybeAliased(4, _s, target);
      break;
    }
    case kBfloat16Vector: {
      const std::string& _s = this->_internal_bfloat16_vector();
      target = stream->WriteBytesMaybeAliased(5, _s, target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.VectorField)
  return target;
}

::size_t VectorField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.VectorField)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 dim = 1;
  if (this->_internal_dim() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_dim());
  }

  switch (data_case()) {
    // .milvus.proto.schema.FloatArray float_vector = 2;
    case kFloatVector: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_.float_vector_);
      break;
    }
    // bytes binary_vector = 3;
    case kBinaryVector: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_binary_vector());
      break;
    }
    // bytes float16_vector = 4;
    case kFloat16Vector: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_float16_vector());
      break;
    }
    // bytes bfloat16_vector = 5;
    case kBfloat16Vector: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_bfloat16_vector());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VectorField::_class_data_ = {
    VectorField::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VectorField::GetClassData() const {
  return &_class_data_;
}

void VectorField::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VectorField*>(&to_msg);
  auto& from = static_cast<const VectorField&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.VectorField)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_dim() != 0) {
    _this->_internal_set_dim(from._internal_dim());
  }
  switch (from.data_case()) {
    case kFloatVector: {
      _this->_internal_mutable_float_vector()->::milvus::proto::schema::FloatArray::MergeFrom(
          from._internal_float_vector());
      break;
    }
    case kBinaryVector: {
      _this->_internal_set_binary_vector(from._internal_binary_vector());
      break;
    }
    case kFloat16Vector: {
      _this->_internal_set_float16_vector(from._internal_float16_vector());
      break;
    }
    case kBfloat16Vector: {
      _this->_internal_set_bfloat16_vector(from._internal_bfloat16_vector());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VectorField::CopyFrom(const VectorField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.VectorField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VectorField::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VectorField::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VectorField::InternalSwap(VectorField* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.dim_, other->_impl_.dim_);
  swap(_impl_.data_, other->_impl_.data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata VectorField::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[13]);
}
// ===================================================================

class FieldData::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::FieldData, _impl_._oneof_case_);
  static const ::milvus::proto::schema::ScalarField& scalars(const FieldData* msg);
  static const ::milvus::proto::schema::VectorField& vectors(const FieldData* msg);
};

const ::milvus::proto::schema::ScalarField& FieldData::_Internal::scalars(const FieldData* msg) {
  return *msg->_impl_.field_.scalars_;
}
const ::milvus::proto::schema::VectorField& FieldData::_Internal::vectors(const FieldData* msg) {
  return *msg->_impl_.field_.vectors_;
}
void FieldData::set_allocated_scalars(::milvus::proto::schema::ScalarField* scalars) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_field();
  if (scalars) {
    ::google::protobuf::Arena* submessage_arena = scalars->GetArena();
    if (message_arena != submessage_arena) {
      scalars = ::google::protobuf::internal::GetOwnedMessage(message_arena, scalars, submessage_arena);
    }
    set_has_scalars();
    _impl_.field_.scalars_ = scalars;
  }
  // @@protoc_insertion_point(field_set_allocated:milvus.proto.schema.FieldData.scalars)
}
void FieldData::set_allocated_vectors(::milvus::proto::schema::VectorField* vectors) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_field();
  if (vectors) {
    ::google::protobuf::Arena* submessage_arena = vectors->GetArena();
    if (message_arena != submessage_arena) {
      vectors = ::google::protobuf::internal::GetOwnedMessage(message_arena, vectors, submessage_arena);
    }
    set_has_vectors();
    _impl_.field_.vectors_ = vectors;
  }
  // @@protoc_insertion_point(field_set_allocated:milvus.proto.schema.FieldData.vectors)
}
FieldData::FieldData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.FieldData)
}
inline PROTOBUF_NDEBUG_INLINE FieldData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : field_name_(arena, from.field_name_),
        field_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

FieldData::FieldData(
    ::google::protobuf::Arena* arena,
    const FieldData& from)
    : ::google::protobuf::Message(arena) {
  FieldData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, field_id_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::field_id_));
  switch (field_case()) {
    case FIELD_NOT_SET:
      break;
      case kScalars:
        _impl_.field_.scalars_ = CreateMaybeMessage<::milvus::proto::schema::ScalarField>(arena, *from._impl_.field_.scalars_);
        break;
      case kVectors:
        _impl_.field_.vectors_ = CreateMaybeMessage<::milvus::proto::schema::VectorField>(arena, *from._impl_.field_.vectors_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.FieldData)
}
inline PROTOBUF_NDEBUG_INLINE FieldData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : field_name_(arena),
        field_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void FieldData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, field_id_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::field_id_));
}
FieldData::~FieldData() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.FieldData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FieldData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.field_name_.Destroy();
  if (has_field()) {
    clear_field();
  }
  _impl_.~Impl_();
}

void FieldData::clear_field() {
// @@protoc_insertion_point(one_of_clear_start:milvus.proto.schema.FieldData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (field_case()) {
    case kScalars: {
      if (GetArena() == nullptr) {
        delete _impl_.field_.scalars_;
      }
      break;
    }
    case kVectors: {
      if (GetArena() == nullptr) {
        delete _impl_.field_.vectors_;
      }
      break;
    }
    case FIELD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FIELD_NOT_SET;
}


PROTOBUF_NOINLINE void FieldData::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.FieldData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.field_name_.ClearToEmpty();
  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.field_id_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.field_id_));
  clear_field();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FieldData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 48, 2> FieldData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FieldData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .milvus.proto.schema.DataType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FieldData, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FieldData, _impl_.type_)}},
    // string field_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FieldData, _impl_.field_name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 field_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FieldData, _impl_.field_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(FieldData, _impl_.field_id_)}},
    // bool is_dynamic = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FieldData, _impl_.is_dynamic_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(FieldData, _impl_.is_dynamic_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .milvus.proto.schema.DataType type = 1;
    {PROTOBUF_FIELD_OFFSET(FieldData, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string field_name = 2;
    {PROTOBUF_FIELD_OFFSET(FieldData, _impl_.field_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .milvus.proto.schema.ScalarField scalars = 3;
    {PROTOBUF_FIELD_OFFSET(FieldData, _impl_.field_.scalars_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .milvus.proto.schema.VectorField vectors = 4;
    {PROTOBUF_FIELD_OFFSET(FieldData, _impl_.field_.vectors_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 field_id = 5;
    {PROTOBUF_FIELD_OFFSET(FieldData, _impl_.field_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool is_dynamic = 6;
    {PROTOBUF_FIELD_OFFSET(FieldData, _impl_.is_dynamic_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::ScalarField>()},
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::VectorField>()},
  }}, {{
    "\35\0\12\0\0\0\0\0"
    "milvus.proto.schema.FieldData"
    "field_name"
  }},
};

::uint8_t* FieldData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.FieldData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .milvus.proto.schema.DataType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // string field_name = 2;
  if (!this->_internal_field_name().empty()) {
    const std::string& _s = this->_internal_field_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.schema.FieldData.field_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  switch (field_case()) {
    case kScalars: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::scalars(this),
          _Internal::scalars(this).GetCachedSize(), target, stream);
      break;
    }
    case kVectors: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::vectors(this),
          _Internal::vectors(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  // int64 field_id = 5;
  if (this->_internal_field_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_field_id(), target);
  }

  // bool is_dynamic = 6;
  if (this->_internal_is_dynamic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_is_dynamic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.FieldData)
  return target;
}

::size_t FieldData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.FieldData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string field_name = 2;
  if (!this->_internal_field_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_field_name());
  }

  // .milvus.proto.schema.DataType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // bool is_dynamic = 6;
  if (this->_internal_is_dynamic() != 0) {
    total_size += 2;
  }

  // int64 field_id = 5;
  if (this->_internal_field_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_field_id());
  }

  switch (field_case()) {
    // .milvus.proto.schema.ScalarField scalars = 3;
    case kScalars: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.field_.scalars_);
      break;
    }
    // .milvus.proto.schema.VectorField vectors = 4;
    case kVectors: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.field_.vectors_);
      break;
    }
    case FIELD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FieldData::_class_data_ = {
    FieldData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FieldData::GetClassData() const {
  return &_class_data_;
}

void FieldData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FieldData*>(&to_msg);
  auto& from = static_cast<const FieldData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.FieldData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_field_name().empty()) {
    _this->_internal_set_field_name(from._internal_field_name());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_is_dynamic() != 0) {
    _this->_internal_set_is_dynamic(from._internal_is_dynamic());
  }
  if (from._internal_field_id() != 0) {
    _this->_internal_set_field_id(from._internal_field_id());
  }
  switch (from.field_case()) {
    case kScalars: {
      _this->_internal_mutable_scalars()->::milvus::proto::schema::ScalarField::MergeFrom(
          from._internal_scalars());
      break;
    }
    case kVectors: {
      _this->_internal_mutable_vectors()->::milvus::proto::schema::VectorField::MergeFrom(
          from._internal_vectors());
      break;
    }
    case FIELD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FieldData::CopyFrom(const FieldData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.FieldData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FieldData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FieldData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FieldData::InternalSwap(FieldData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.field_name_, &other->_impl_.field_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FieldData, _impl_.field_id_)
      + sizeof(FieldData::_impl_.field_id_)
      - PROTOBUF_FIELD_OFFSET(FieldData, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
  swap(_impl_.field_, other->_impl_.field_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata FieldData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[14]);
}
// ===================================================================

class IDs::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::milvus::proto::schema::IDs, _impl_._oneof_case_);
  static const ::milvus::proto::schema::LongArray& int_id(const IDs* msg);
  static const ::milvus::proto::schema::StringArray& str_id(const IDs* msg);
};

const ::milvus::proto::schema::LongArray& IDs::_Internal::int_id(const IDs* msg) {
  return *msg->_impl_.id_field_.int_id_;
}
const ::milvus::proto::schema::StringArray& IDs::_Internal::str_id(const IDs* msg) {
  return *msg->_impl_.id_field_.str_id_;
}
void IDs::set_allocated_int_id(::milvus::proto::schema::LongArray* int_id) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_id_field();
  if (int_id) {
    ::google::protobuf::Arena* submessage_arena = int_id->GetArena();
    if (message_arena != submessage_arena) {
      int_id = ::google::protobuf::internal::GetOwnedMessage(message_arena, int_id, submessage_arena);
    }
    set_has_int_id();
    _impl_.id_field_.int_id_ = int_id;
  }
  // @@protoc_insertion_point(field_set_allocated:milvus.proto.schema.IDs.int_id)
}
void IDs::set_allocated_str_id(::milvus::proto::schema::StringArray* str_id) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_id_field();
  if (str_id) {
    ::google::protobuf::Arena* submessage_arena = str_id->GetArena();
    if (message_arena != submessage_arena) {
      str_id = ::google::protobuf::internal::GetOwnedMessage(message_arena, str_id, submessage_arena);
    }
    set_has_str_id();
    _impl_.id_field_.str_id_ = str_id;
  }
  // @@protoc_insertion_point(field_set_allocated:milvus.proto.schema.IDs.str_id)
}
IDs::IDs(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.IDs)
}
inline PROTOBUF_NDEBUG_INLINE IDs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : id_field_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

IDs::IDs(
    ::google::protobuf::Arena* arena,
    const IDs& from)
    : ::google::protobuf::Message(arena) {
  IDs* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (id_field_case()) {
    case ID_FIELD_NOT_SET:
      break;
      case kIntId:
        _impl_.id_field_.int_id_ = CreateMaybeMessage<::milvus::proto::schema::LongArray>(arena, *from._impl_.id_field_.int_id_);
        break;
      case kStrId:
        _impl_.id_field_.str_id_ = CreateMaybeMessage<::milvus::proto::schema::StringArray>(arena, *from._impl_.id_field_.str_id_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.IDs)
}
inline PROTOBUF_NDEBUG_INLINE IDs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_field_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void IDs::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
IDs::~IDs() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.IDs)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IDs::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_id_field()) {
    clear_id_field();
  }
  _impl_.~Impl_();
}

void IDs::clear_id_field() {
// @@protoc_insertion_point(one_of_clear_start:milvus.proto.schema.IDs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (id_field_case()) {
    case kIntId: {
      if (GetArena() == nullptr) {
        delete _impl_.id_field_.int_id_;
      }
      break;
    }
    case kStrId: {
      if (GetArena() == nullptr) {
        delete _impl_.id_field_.str_id_;
      }
      break;
    }
    case ID_FIELD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ID_FIELD_NOT_SET;
}


PROTOBUF_NOINLINE void IDs::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.IDs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_id_field();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IDs::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> IDs::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_IDs_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .milvus.proto.schema.LongArray int_id = 1;
    {PROTOBUF_FIELD_OFFSET(IDs, _impl_.id_field_.int_id_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .milvus.proto.schema.StringArray str_id = 2;
    {PROTOBUF_FIELD_OFFSET(IDs, _impl_.id_field_.str_id_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::LongArray>()},
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::StringArray>()},
  }}, {{
  }},
};

::uint8_t* IDs::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.IDs)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (id_field_case()) {
    case kIntId: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::int_id(this),
          _Internal::int_id(this).GetCachedSize(), target, stream);
      break;
    }
    case kStrId: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::str_id(this),
          _Internal::str_id(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.IDs)
  return target;
}

::size_t IDs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.IDs)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (id_field_case()) {
    // .milvus.proto.schema.LongArray int_id = 1;
    case kIntId: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.id_field_.int_id_);
      break;
    }
    // .milvus.proto.schema.StringArray str_id = 2;
    case kStrId: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.id_field_.str_id_);
      break;
    }
    case ID_FIELD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData IDs::_class_data_ = {
    IDs::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* IDs::GetClassData() const {
  return &_class_data_;
}

void IDs::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<IDs*>(&to_msg);
  auto& from = static_cast<const IDs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.IDs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.id_field_case()) {
    case kIntId: {
      _this->_internal_mutable_int_id()->::milvus::proto::schema::LongArray::MergeFrom(
          from._internal_int_id());
      break;
    }
    case kStrId: {
      _this->_internal_mutable_str_id()->::milvus::proto::schema::StringArray::MergeFrom(
          from._internal_str_id());
      break;
    }
    case ID_FIELD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IDs::CopyFrom(const IDs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.IDs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IDs::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* IDs::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void IDs::InternalSwap(IDs* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.id_field_, other->_impl_.id_field_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata IDs::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[15]);
}
// ===================================================================

class SearchResultData::_Internal {
 public:
  using HasBits = decltype(std::declval<SearchResultData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_._has_bits_);
  static const ::milvus::proto::schema::IDs& ids(const SearchResultData* msg);
  static void set_has_ids(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::milvus::proto::schema::FieldData& group_by_field_value(const SearchResultData* msg);
  static void set_has_group_by_field_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::milvus::proto::schema::IDs& SearchResultData::_Internal::ids(const SearchResultData* msg) {
  return *msg->_impl_.ids_;
}
const ::milvus::proto::schema::FieldData& SearchResultData::_Internal::group_by_field_value(const SearchResultData* msg) {
  return *msg->_impl_.group_by_field_value_;
}
SearchResultData::SearchResultData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.SearchResultData)
}
inline PROTOBUF_NDEBUG_INLINE SearchResultData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        fields_data_{visibility, arena, from.fields_data_},
        scores_{visibility, arena, from.scores_},
        topks_{visibility, arena, from.topks_},
        _topks_cached_byte_size_{0},
        output_fields_{visibility, arena, from.output_fields_} {}

SearchResultData::SearchResultData(
    ::google::protobuf::Arena* arena,
    const SearchResultData& from)
    : ::google::protobuf::Message(arena) {
  SearchResultData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ids_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::milvus::proto::schema::IDs>(arena, *from._impl_.ids_)
                : nullptr;
  _impl_.group_by_field_value_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::milvus::proto::schema::FieldData>(arena, *from._impl_.group_by_field_value_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_queries_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, num_queries_),
           offsetof(Impl_, top_k_) -
               offsetof(Impl_, num_queries_) +
               sizeof(Impl_::top_k_));

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.SearchResultData)
}
inline PROTOBUF_NDEBUG_INLINE SearchResultData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        fields_data_{visibility, arena},
        scores_{visibility, arena},
        topks_{visibility, arena},
        _topks_cached_byte_size_{0},
        output_fields_{visibility, arena} {}

inline void SearchResultData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ids_),
           0,
           offsetof(Impl_, top_k_) -
               offsetof(Impl_, ids_) +
               sizeof(Impl_::top_k_));
}
SearchResultData::~SearchResultData() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.SearchResultData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SearchResultData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.ids_;
  delete _impl_.group_by_field_value_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SearchResultData::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.SearchResultData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fields_data_.Clear();
  _impl_.scores_.Clear();
  _impl_.topks_.Clear();
  _impl_.output_fields_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.ids_ != nullptr);
      _impl_.ids_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.group_by_field_value_ != nullptr);
      _impl_.group_by_field_value_->Clear();
    }
  }
  ::memset(&_impl_.num_queries_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.top_k_) -
      reinterpret_cast<char*>(&_impl_.num_queries_)) + sizeof(_impl_.top_k_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SearchResultData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 66, 2> SearchResultData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SearchResultData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .milvus.proto.schema.FieldData group_by_field_value = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 1, 2, PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.group_by_field_value_)}},
    // int64 num_queries = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchResultData, _impl_.num_queries_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.num_queries_)}},
    // int64 top_k = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchResultData, _impl_.top_k_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.top_k_)}},
    // repeated .milvus.proto.schema.FieldData fields_data = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.fields_data_)}},
    // repeated float scores = 4;
    {::_pbi::TcParser::FastF32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.scores_)}},
    // .milvus.proto.schema.IDs ids = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 1, PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.ids_)}},
    // repeated int64 topks = 6;
    {::_pbi::TcParser::FastV64P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.topks_)}},
    // repeated string output_fields = 7;
    {::_pbi::TcParser::FastUR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.output_fields_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 num_queries = 1;
    {PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.num_queries_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 top_k = 2;
    {PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.top_k_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated .milvus.proto.schema.FieldData fields_data = 3;
    {PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.fields_data_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated float scores = 4;
    {PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.scores_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // .milvus.proto.schema.IDs ids = 5;
    {PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.ids_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int64 topks = 6;
    {PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.topks_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // repeated string output_fields = 7;
    {PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.output_fields_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .milvus.proto.schema.FieldData group_by_field_value = 8;
    {PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.group_by_field_value_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::FieldData>()},
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::IDs>()},
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::FieldData>()},
  }}, {{
    "\44\0\0\0\0\0\0\15\0\0\0\0\0\0\0\0"
    "milvus.proto.schema.SearchResultData"
    "output_fields"
  }},
};

::uint8_t* SearchResultData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.SearchResultData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 num_queries = 1;
  if (this->_internal_num_queries() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_num_queries(), target);
  }

  // int64 top_k = 2;
  if (this->_internal_top_k() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_top_k(), target);
  }

  // repeated .milvus.proto.schema.FieldData fields_data = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fields_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_fields_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated float scores = 4;
  if (this->_internal_scores_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_scores(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .milvus.proto.schema.IDs ids = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::ids(this),
        _Internal::ids(this).GetCachedSize(), target, stream);
  }

  // repeated int64 topks = 6;
  {
    int byte_size = _impl_._topks_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          6, _internal_topks(), byte_size, target);
    }
  }

  // repeated string output_fields = 7;
  for (int i = 0, n = this->_internal_output_fields_size(); i < n; ++i) {
    const auto& s = this->_internal_output_fields().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.schema.SearchResultData.output_fields");
    target = stream->WriteString(7, s, target);
  }

  // .milvus.proto.schema.FieldData group_by_field_value = 8;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::group_by_field_value(this),
        _Internal::group_by_field_value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.SearchResultData)
  return target;
}

::size_t SearchResultData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.SearchResultData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .milvus.proto.schema.FieldData fields_data = 3;
  total_size += 1UL * this->_internal_fields_data_size();
  for (const auto& msg : this->_internal_fields_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated float scores = 4;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_scores_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int64 topks = 6;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_topks())
    ;
    _impl_._topks_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated string output_fields = 7;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_output_fields().size());
  for (int i = 0, n = _internal_output_fields().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_output_fields().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .milvus.proto.schema.IDs ids = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ids_);
    }

    // .milvus.proto.schema.FieldData group_by_field_value = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.group_by_field_value_);
    }

  }
  // int64 num_queries = 1;
  if (this->_internal_num_queries() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_num_queries());
  }

  // int64 top_k = 2;
  if (this->_internal_top_k() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_top_k());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SearchResultData::_class_data_ = {
    SearchResultData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SearchResultData::GetClassData() const {
  return &_class_data_;
}

void SearchResultData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SearchResultData*>(&to_msg);
  auto& from = static_cast<const SearchResultData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.SearchResultData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_fields_data()->MergeFrom(
      from._internal_fields_data());
  _this->_internal_mutable_scores()->MergeFrom(from._internal_scores());
  _this->_internal_mutable_topks()->MergeFrom(from._internal_topks());
  _this->_internal_mutable_output_fields()->MergeFrom(from._internal_output_fields());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_ids()->::milvus::proto::schema::IDs::MergeFrom(
          from._internal_ids());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_group_by_field_value()->::milvus::proto::schema::FieldData::MergeFrom(
          from._internal_group_by_field_value());
    }
  }
  if (from._internal_num_queries() != 0) {
    _this->_internal_set_num_queries(from._internal_num_queries());
  }
  if (from._internal_top_k() != 0) {
    _this->_internal_set_top_k(from._internal_top_k());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchResultData::CopyFrom(const SearchResultData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.SearchResultData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SearchResultData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SearchResultData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SearchResultData::InternalSwap(SearchResultData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.fields_data_.InternalSwap(&other->_impl_.fields_data_);
  _impl_.scores_.InternalSwap(&other->_impl_.scores_);
  _impl_.topks_.InternalSwap(&other->_impl_.topks_);
  _impl_.output_fields_.InternalSwap(&other->_impl_.output_fields_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.top_k_)
      + sizeof(SearchResultData::_impl_.top_k_)
      - PROTOBUF_FIELD_OFFSET(SearchResultData, _impl_.ids_)>(
          reinterpret_cast<char*>(&_impl_.ids_),
          reinterpret_cast<char*>(&other->_impl_.ids_));
}

::google::protobuf::Metadata SearchResultData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[16]);
}
// ===================================================================

class VectorClusteringInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<VectorClusteringInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VectorClusteringInfo, _impl_._has_bits_);
  static const ::milvus::proto::schema::VectorField& centroid(const VectorClusteringInfo* msg);
  static void set_has_centroid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::milvus::proto::schema::VectorField& VectorClusteringInfo::_Internal::centroid(const VectorClusteringInfo* msg) {
  return *msg->_impl_.centroid_;
}
VectorClusteringInfo::VectorClusteringInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.VectorClusteringInfo)
}
inline PROTOBUF_NDEBUG_INLINE VectorClusteringInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        field_(arena, from.field_) {}

VectorClusteringInfo::VectorClusteringInfo(
    ::google::protobuf::Arena* arena,
    const VectorClusteringInfo& from)
    : ::google::protobuf::Message(arena) {
  VectorClusteringInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.centroid_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::milvus::proto::schema::VectorField>(arena, *from._impl_.centroid_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.VectorClusteringInfo)
}
inline PROTOBUF_NDEBUG_INLINE VectorClusteringInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        field_(arena) {}

inline void VectorClusteringInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.centroid_ = {};
}
VectorClusteringInfo::~VectorClusteringInfo() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.VectorClusteringInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VectorClusteringInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.field_.Destroy();
  delete _impl_.centroid_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VectorClusteringInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.VectorClusteringInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.field_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.centroid_ != nullptr);
    _impl_.centroid_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VectorClusteringInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 54, 2> VectorClusteringInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VectorClusteringInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VectorClusteringInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .milvus.proto.schema.VectorField centroid = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(VectorClusteringInfo, _impl_.centroid_)}},
    // string field = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VectorClusteringInfo, _impl_.field_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string field = 1;
    {PROTOBUF_FIELD_OFFSET(VectorClusteringInfo, _impl_.field_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .milvus.proto.schema.VectorField centroid = 2;
    {PROTOBUF_FIELD_OFFSET(VectorClusteringInfo, _impl_.centroid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::VectorField>()},
  }}, {{
    "\50\5\0\0\0\0\0\0"
    "milvus.proto.schema.VectorClusteringInfo"
    "field"
  }},
};

::uint8_t* VectorClusteringInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.VectorClusteringInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string field = 1;
  if (!this->_internal_field().empty()) {
    const std::string& _s = this->_internal_field();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.schema.VectorClusteringInfo.field");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .milvus.proto.schema.VectorField centroid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::centroid(this),
        _Internal::centroid(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.VectorClusteringInfo)
  return target;
}

::size_t VectorClusteringInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.VectorClusteringInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string field = 1;
  if (!this->_internal_field().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_field());
  }

  // .milvus.proto.schema.VectorField centroid = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.centroid_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VectorClusteringInfo::_class_data_ = {
    VectorClusteringInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VectorClusteringInfo::GetClassData() const {
  return &_class_data_;
}

void VectorClusteringInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VectorClusteringInfo*>(&to_msg);
  auto& from = static_cast<const VectorClusteringInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.VectorClusteringInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_field().empty()) {
    _this->_internal_set_field(from._internal_field());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_centroid()->::milvus::proto::schema::VectorField::MergeFrom(
        from._internal_centroid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VectorClusteringInfo::CopyFrom(const VectorClusteringInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.VectorClusteringInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VectorClusteringInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VectorClusteringInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VectorClusteringInfo::InternalSwap(VectorClusteringInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.field_, &other->_impl_.field_, arena);
  swap(_impl_.centroid_, other->_impl_.centroid_);
}

::google::protobuf::Metadata VectorClusteringInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[17]);
}
// ===================================================================

class ScalarClusteringInfo::_Internal {
 public:
};

ScalarClusteringInfo::ScalarClusteringInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.ScalarClusteringInfo)
}
inline PROTOBUF_NDEBUG_INLINE ScalarClusteringInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : field_(arena, from.field_),
        _cached_size_{0} {}

ScalarClusteringInfo::ScalarClusteringInfo(
    ::google::protobuf::Arena* arena,
    const ScalarClusteringInfo& from)
    : ::google::protobuf::Message(arena) {
  ScalarClusteringInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.ScalarClusteringInfo)
}
inline PROTOBUF_NDEBUG_INLINE ScalarClusteringInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : field_(arena),
        _cached_size_{0} {}

inline void ScalarClusteringInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ScalarClusteringInfo::~ScalarClusteringInfo() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.ScalarClusteringInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ScalarClusteringInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.field_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ScalarClusteringInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.ScalarClusteringInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.field_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ScalarClusteringInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 54, 2> ScalarClusteringInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ScalarClusteringInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string field = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ScalarClusteringInfo, _impl_.field_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string field = 1;
    {PROTOBUF_FIELD_OFFSET(ScalarClusteringInfo, _impl_.field_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\5\0\0\0\0\0\0"
    "milvus.proto.schema.ScalarClusteringInfo"
    "field"
  }},
};

::uint8_t* ScalarClusteringInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.ScalarClusteringInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string field = 1;
  if (!this->_internal_field().empty()) {
    const std::string& _s = this->_internal_field();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "milvus.proto.schema.ScalarClusteringInfo.field");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.ScalarClusteringInfo)
  return target;
}

::size_t ScalarClusteringInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.ScalarClusteringInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string field = 1;
  if (!this->_internal_field().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_field());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ScalarClusteringInfo::_class_data_ = {
    ScalarClusteringInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ScalarClusteringInfo::GetClassData() const {
  return &_class_data_;
}

void ScalarClusteringInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ScalarClusteringInfo*>(&to_msg);
  auto& from = static_cast<const ScalarClusteringInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.ScalarClusteringInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_field().empty()) {
    _this->_internal_set_field(from._internal_field());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScalarClusteringInfo::CopyFrom(const ScalarClusteringInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.ScalarClusteringInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ScalarClusteringInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ScalarClusteringInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ScalarClusteringInfo::InternalSwap(ScalarClusteringInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.field_, &other->_impl_.field_, arena);
}

::google::protobuf::Metadata ScalarClusteringInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[18]);
}
// ===================================================================

class ClusteringInfo::_Internal {
 public:
};

ClusteringInfo::ClusteringInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:milvus.proto.schema.ClusteringInfo)
}
inline PROTOBUF_NDEBUG_INLINE ClusteringInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : vector_clustering_infos_{visibility, arena, from.vector_clustering_infos_},
        scalar_clustering_infos_{visibility, arena, from.scalar_clustering_infos_},
        _cached_size_{0} {}

ClusteringInfo::ClusteringInfo(
    ::google::protobuf::Arena* arena,
    const ClusteringInfo& from)
    : ::google::protobuf::Message(arena) {
  ClusteringInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:milvus.proto.schema.ClusteringInfo)
}
inline PROTOBUF_NDEBUG_INLINE ClusteringInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : vector_clustering_infos_{visibility, arena},
        scalar_clustering_infos_{visibility, arena},
        _cached_size_{0} {}

inline void ClusteringInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ClusteringInfo::~ClusteringInfo() {
  // @@protoc_insertion_point(destructor:milvus.proto.schema.ClusteringInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ClusteringInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ClusteringInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:milvus.proto.schema.ClusteringInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vector_clustering_infos_.Clear();
  _impl_.scalar_clustering_infos_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ClusteringInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ClusteringInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ClusteringInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .milvus.proto.schema.ScalarClusteringInfo scalar_clustering_infos = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ClusteringInfo, _impl_.scalar_clustering_infos_)}},
    // repeated .milvus.proto.schema.VectorClusteringInfo vector_clustering_infos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClusteringInfo, _impl_.vector_clustering_infos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .milvus.proto.schema.VectorClusteringInfo vector_clustering_infos = 1;
    {PROTOBUF_FIELD_OFFSET(ClusteringInfo, _impl_.vector_clustering_infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .milvus.proto.schema.ScalarClusteringInfo scalar_clustering_infos = 2;
    {PROTOBUF_FIELD_OFFSET(ClusteringInfo, _impl_.scalar_clustering_infos_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::VectorClusteringInfo>()},
    {::_pbi::TcParser::GetTable<::milvus::proto::schema::ScalarClusteringInfo>()},
  }}, {{
  }},
};

::uint8_t* ClusteringInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:milvus.proto.schema.ClusteringInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .milvus.proto.schema.VectorClusteringInfo vector_clustering_infos = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vector_clustering_infos_size()); i < n; i++) {
    const auto& repfield = this->_internal_vector_clustering_infos().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .milvus.proto.schema.ScalarClusteringInfo scalar_clustering_infos = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_scalar_clustering_infos_size()); i < n; i++) {
    const auto& repfield = this->_internal_scalar_clustering_infos().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:milvus.proto.schema.ClusteringInfo)
  return target;
}

::size_t ClusteringInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:milvus.proto.schema.ClusteringInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .milvus.proto.schema.VectorClusteringInfo vector_clustering_infos = 1;
  total_size += 1UL * this->_internal_vector_clustering_infos_size();
  for (const auto& msg : this->_internal_vector_clustering_infos()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .milvus.proto.schema.ScalarClusteringInfo scalar_clustering_infos = 2;
  total_size += 1UL * this->_internal_scalar_clustering_infos_size();
  for (const auto& msg : this->_internal_scalar_clustering_infos()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ClusteringInfo::_class_data_ = {
    ClusteringInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ClusteringInfo::GetClassData() const {
  return &_class_data_;
}

void ClusteringInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ClusteringInfo*>(&to_msg);
  auto& from = static_cast<const ClusteringInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:milvus.proto.schema.ClusteringInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vector_clustering_infos()->MergeFrom(
      from._internal_vector_clustering_infos());
  _this->_internal_mutable_scalar_clustering_infos()->MergeFrom(
      from._internal_scalar_clustering_infos());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClusteringInfo::CopyFrom(const ClusteringInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:milvus.proto.schema.ClusteringInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ClusteringInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ClusteringInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ClusteringInfo::InternalSwap(ClusteringInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.vector_clustering_infos_.InternalSwap(&other->_impl_.vector_clustering_infos_);
  _impl_.scalar_clustering_infos_.InternalSwap(&other->_impl_.scalar_clustering_infos_);
}

::google::protobuf::Metadata ClusteringInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_schema_2eproto_getter, &descriptor_table_schema_2eproto_once,
      file_level_metadata_schema_2eproto[19]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace schema
}  // namespace proto
}  // namespace milvus
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
